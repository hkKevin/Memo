.text {
  font-size: 24px;
  text-align: center;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  height: 24px;
}

.layout {
  margin: 4rem .5rem .5rem 0;
  position: relative;
}

.memo {
  margin: .3rem;
  max-width: 600px !important;
  max-height: 600px !important;
  border-radius: 3px !important;
  padding: 1rem;
  box-shadow: 0px 1px 5px 0px rgba(0,0,0,0.2), 
              0px 2px 2px 0px rgba(0,0,0,0.14), 
              0px 3px 1px -2px rgba(0,0,0,0.12);
  box-sizing: border-box;
  display: block;
  text-align: left;
  overflow: hidden;
  white-space: pre-wrap;
  transition: all .3s ease-out;
}

.memo:hover {
  cursor: pointer;
  box-shadow: 0px 1px 8px 0px rgba(0,0,0,0.2), 
              0px 3px 4px 0px rgba(0,0,0,0.14), 
              0px 3px 3px -2px rgba(0,0,0,0.12);
}

.memo:active {
  cursor: pointer;
  box-shadow: 0px 2px 4px -1px rgba(0,0,0,0.2), 
              0px 4px 5px 0px rgba(0,0,0,0.14), 
              0px 1px 10px 0px rgba(0,0,0,0.12);
}

@media only screen and (max-width: 500px) {
  .memo {
    padding: .5rem;
  }
}

.react-grid-item:not(.react-grid-placeholder) {
  background: #eee;
  border: 1px solid lightslategrey;
}

.react-grid-item.react-draggable-dragging {
  transition: none;
  z-index: 3;
  will-change: transform;
}

.react-grid-item.cssTransforms {
  transition-property: transform;
}

.react-grid-item {
  box-sizing: border-box;
  transition: all 100ms ease;
}

.react-resizable-handle {
  position: absolute;
  width: 20px;
  height: 20px;
  bottom: 0;
  right: 0;
  cursor: se-resize;
}

.react-resizable-handle::after {
  content: "";
  position: absolute;
  right: 3px;
  bottom: 3px;
  width: 7px;
  height: 7px;
  border-right: 2px solid #999;
  border-bottom: 2px solid #999;
}

.dragHandle {
  position: absolute;
  bottom: 0;
  left: 0;
  padding: 2rem 2rem 0.2rem 0.2rem;
  cursor: -webkit-grab;
  color: #999;
}

.dragHandle:active {
  cursor: -webkit-grabbing;
}

/* .memo:hover {
  cursor: pointer;
  box-shadow: 5px 5px 5px #ccc !important;
}

.memo:active {
  box-shadow: 10px 10px 10px #ccc !important;
} */

.dragMode {
  font-size: 1.7em;
  z-index: 99;
  color: black;
  font-weight: normal;
  opacity: 0.3;
  position: fixed;
  bottom: 70px;
  right: 22px;
  /* animation-name: dragMode;
  animation-duration: 0.5;
  animation-timing-function: linear;
  animation-delay: 0.5s;
  animation-iteration-count: 1; */
  animation: dragMode .5s linear .5s 1;
}

@media (max-width: 400px) {
  .dragMode {
    font-size: 1em;
  }
}

.dragMode:hover {
  color: black;
  cursor: pointer;
  opacity: 1;
}

/* .btn-warning:not(:disabled):not(.disabled):active, */
.dragMode:active {
  color: #555;
}

@keyframes dragMode {
  0% {
      transform: scale(1);
  }
  60% {
      transform: scale(1.1);
      opacity: 1;
  }
  100% {
      transform: scale(1);
  }
}

hr {
  border: 0;
  height: 1px;
  background: #ccc;
}

/* Widen the modal/ dialog on small screen */
@media screen and (max-width: 500px) {
  .MuiDialog-paper-127 {
    margin: 0 2vw !important;
  }
}

.memo-empty-icon {
  margin-bottom: 3rem;
}

.memo-empty {
  margin: 15rem 0;
}

