{"version":3,"sources":["axios-orders.js","containers/Memos/Memos.js","containers/AddMemo/AddMemo.js","components/UI/SideMenu/SideMenu.js","store/actions/memos.js","store/actions/index.js","containers/FilteredMemos/FilteredMemos.js","containers/ArchivedMemos/ArchivedMemos.js","App.js","serviceWorker.js","store/reducers/memos.js","index.js","components/UI/Toast/Toast.js","components/UI/Modal/Modal.js"],"names":["axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","instance","n","axios","create","baseURL","ResponsiveReactGridLayout","WidthProvider","Responsive","Memos","props","_this","Object","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","memoClicked","memo","toggle","selectMemo","storeId","storeColor","onToggleModal","checkInput","onSelectMemo","title","content","setState","hasTitle","hasContent","onStoreId","id","onStoreColor","color","generateAddedMemos","addedMemos","length","filter","archived","map","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","key","onDoubleClick","style","state","memoStyle","className","data-grid","x","y","w","h","draggable","onLayoutChange","bind","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","layouts","getFromLS","YELLOW","border","backgroundColor","PURPLE","ORANGE","GREEN","BLUE","PINK","firebase","apps","initializeApp","apiKey","authDomain","databaseURL","onFetchMemos","layout","newLayout","layoutName","value","global","localStorage","setItem","JSON","stringify","console","error","_this2","newMemoSaved","onUpdateId","classes","_components_UI_SideMenu_SideMenu__WEBPACK_IMPORTED_MODULE_14__","history","_containers_AddMemo_AddMemo__WEBPACK_IMPORTED_MODULE_13__","memosFetched","breakpoints","lg","md","sm","xs","xxs","cols","rowHeight","isDraggable","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","progress","showStoredMemo","_components_UI_Modal_Modal__WEBPACK_IMPORTED_MODULE_16__","_components_UI_Toast_Toast__WEBPACK_IMPORTED_MODULE_15__","toastMsg","React","PureComponent","emptyObject","data","isEmpty","keys","constructor","savedLayout","getItem","parse","minW","maxW","connect","memos","tempMemos","filterColor","dispatch","type","memoTitle","memoContent","memoId","memoColor","actions","withStyles","theme","marginTop","spacing","unit","AddMemo","deleteInput","saveMemo","memoData","Date","getTime","onSaveMemo","saveMemoClicked","titleChangedHandler","event","target","contentChangedHandler","atLeastOneInputHasValue","dialog","react__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","open","showModal","onClose","fullWidth","maxWidth","autoFocus","margin","label","required","onChange","multiline","rows","root","onClick","variant","button","disabled","Component","input","display","formControl","minWidth","SideMenu","menu","checked","dragToggleSwitched","onToggleDraggable","closeDrawer","openDrawer","createOnClick","onCreateMemo","searchClicked","onSearch","push","titleClicked","document","body","scrollTop","documentElement","showArchivedMemos","fullList","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_9__","primary","links","credit","href","rel","link","position","menuButton","aria-label","_material_ui_icons_Menu__WEBPACK_IMPORTED_MODULE_11___default","searchIcon","_material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_10___default","fab","size","anchor","onOpen","tabIndex","role","width","flexGrow","textAlign","paddingTop","paddingBottom","paddingLeft","marginLeft","marginRight","bottom","right","zIndex","tooltip","post","then","response","firebaseItemId","saveMemoSuccess","name","catch","log","fetchMemos","fetchedMemos","fetch","ok","Error","statusText","json","d","__webpack_exports__","memos_saveMemo","FilteredMemos","classCallCheck","possibleConstructorReturn","getPrototypeOf","searchOnChange","searchedWord","searchingMemo","toLowerCase","includes","react_default","colorClicked","onFilterMemos","clearFilterClicked","onClearFilter","dropdownOpen","filterControl","Fragment","searchContainer","index_es","textField","colorContainer","goBack","ArrowBack_default","clearIcon","CancelOutlined_default","Modal","Toast","justifyContent","alignItems","marginBottom","ArchivedMemos","App","routes","react_router","path","component","exact","to","withRouter","Boolean","window","location","hostname","match","initialState","selectedMemoTitle","selectedMemoContent","selectedId","selectedMemoColor","showNewMemoDialog","arrIndex","arguments","undefined","action","objectSpread","newMemo","concat","editedmemos","index","firebaseDb","database","updateIdUpdates","ref","update","renewMemos","deleteMemoUpdates","updatedMemos","updateMemoUpdates","archivedMemos","archiveMemoUpdates","colorChangedMemos","changeColorUpdates","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","createMuiTheme","palette","main","secondary","ReactDOM","render","es","react_router_dom","styles","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","hideToast","reason","onHideToast","showToast","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","db","showInnerModal","onChangeTitle","onChangeContent","changeColor","onChangeColor","OuterDeleteBtnClicked","updateMemoClicked","updateMemo","onUpdateMemo","innerModalToggle","innerDeleteBtnClicked","deleteMemo","onDeleteMemo","archiveMemo","onArchiveMemo","colorSelected","selectEmpty","aria-labelledby"],"mappings":"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","file":"static/js/main.f6c571bb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://memo-a117b.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport firebase from 'firebase';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport AddMemo from '../../containers/AddMemo/AddMemo';\r\nimport SideMenu from '../../components/UI/SideMenu/SideMenu';\r\nimport Toast from '../../components/UI/Toast/Toast';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport './Memos.css';\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    marginTop: theme.spacing.unit * 20,\r\n  }\r\n});\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\nclass Memos extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onLayoutChange = this.onLayoutChange.bind(this);\r\n    this.state = {\r\n      hasTitle: false,\r\n      hasContent: false,\r\n      layouts: getFromLS('layouts'),\r\n      memoStyle: {\r\n        'YELLOW': {\r\n          border: '1px solid #feef9c',\r\n          backgroundColor: '#feef9c'\r\n        },\r\n        'PURPLE': {\r\n          border: '1px solid #dcdfff',\r\n          backgroundColor: '#dcdfff'\r\n        },\r\n        'ORANGE': {\r\n          border: '1px solid #feccaf',\r\n          backgroundColor: '#feccaf'\r\n        },\r\n        'GREEN': {\r\n          border: '1px solid #b1ffb1',\r\n          backgroundColor: '#b1ffb1'\r\n        },\r\n        'BLUE': {\r\n          border: '1px solid #d8f1ff',\r\n          backgroundColor: '#d8f1ff'\r\n        },\r\n        'PINK': {\r\n          border: '1px solid #feb0bc',\r\n          backgroundColor: '#feb0bc'\r\n        }\r\n      }\r\n    };\r\n    \r\n  }\r\n\r\n  componentWillMount() {\r\n    // Set up Firebase config for connecting to the db.\r\n    var config = {\r\n      apiKey: 'AIzaSyDgZKmgW7LpUpJmHkMpF0II4AcfHyfZFuo',\r\n      authDomain: 'memo-a117b.firebaseapp.com',\r\n      databaseURL: 'https://memo-a117b.firebaseio.com/'\r\n    };\r\n    // Prevent duplicate firebase app\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(config);\r\n    }\r\n    \r\n    // Fetch memos from firebase\r\n    this.props.onFetchMemos();\r\n  }\r\n\r\n  onLayoutChange(layout, newLayout) {\r\n      saveToLS(\"layouts\", newLayout);\r\n      this.setState({ layouts: newLayout })\r\n  }\r\n\r\n  memoClicked = (memo) => {\r\n    this.toggle();\r\n    this.selectMemo(memo);\r\n    this.storeId(memo);\r\n    this.storeColor(memo);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  selectMemo = (memo) => {\r\n    this.checkInput(memo);\r\n    this.props.onSelectMemo(memo.title, memo.content)\r\n  }\r\n\r\n  checkInput = (memo) => {\r\n    if (memo.title === null || memo.title === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n\r\n    if (memo.content === null || memo.content === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n  }\r\n\r\n  storeId = (memo) => {\r\n    this.props.onStoreId(memo.id)\r\n  }\r\n\r\n  storeColor = (memo) => {\r\n    this.props.onStoreColor(memo.color)\r\n  }\r\n\r\n  generateAddedMemos = () => {\r\n    if (this.props.addedMemos.length > 0) {\r\n      // Show all memos except archived memos\r\n      let nonArchivedMemos = null;\r\n      nonArchivedMemos = this.props.addedMemos.filter(memo => memo.archived === false);\r\n      return nonArchivedMemos.map(memo => (\r\n      // return this.props.addedMemos.map(memo => (\r\n        <div\r\n          key={memo.id}\r\n          onDoubleClick={() => this.memoClicked(memo)}\r\n          style={this.state.memoStyle[memo.color]}\r\n          className='memo'\r\n          data-grid={{ x: 0, y: 0, w: 3, h: 5 }}\r\n        >\r\n\r\n          <h3>{memo.title}</h3>\r\n          <hr />\r\n          <div>{memo.content}</div>\r\n          {this.props.draggable\r\n            ? <i className=\"material-icons dragHandle\">drag_handle</i>\r\n            : null}\r\n        </div>\r\n\r\n      ));\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    // Sync newly added memo id from Redux to firebase\r\n    if ( this.props.newMemoSaved === true ) {\r\n      this.props.onUpdateId();\r\n    }\r\n\r\n    const { classes } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <SideMenu history={this.props.history} />\r\n        <AddMemo />\r\n\r\n        {this.props.memosFetched\r\n          ? \r\n          <ResponsiveReactGridLayout\r\n            className=\"layout\"\r\n            breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\r\n            cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\r\n            rowHeight={40}\r\n            layouts={this.state.layouts}\r\n            onLayoutChange={(layout, newLayout) =>\r\n              this.onLayoutChange(layout, newLayout)\r\n            }\r\n            isDraggable={this.props.draggable}\r\n          >\r\n            {this.generateAddedMemos()}\r\n          </ResponsiveReactGridLayout>\r\n          : (<CircularProgress color=\"secondary\" className={classes.progress} />)\r\n        }\r\n\r\n        {this.props.showStoredMemo ? <Modal /> : null}\r\n        <Toast toastMsg={this.props.toastMsg} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const emptyObject = (data) => {\r\n  let isEmpty = true;\r\n\r\n  if (data && data !== 'undefined' && data !== null) {\r\n    isEmpty = Object.keys(data).length === 0 && data.constructor === Object;\r\n  }\r\n\r\n  return isEmpty;\r\n}\r\n\r\nfunction getFromLS(layoutName) {\r\n  if (global.localStorage) {\r\n    let savedLayout = global.localStorage.getItem(layoutName);\r\n    if (savedLayout && !emptyObject(savedLayout)) {\r\n      return JSON.parse(savedLayout).layouts;\r\n    } else {\r\n      return { lg: [{ x: 0, y: 0, w: 4, h: 4, minW: 4, maxW: 8 }] };\r\n    }\r\n  }\r\n}\r\n\r\nexport function saveToLS(layoutName, value) {\r\n  if (global.localStorage) {\r\n    global.localStorage.setItem(layoutName, JSON.stringify({ layouts: value }));\r\n  } else {\r\n    console.error('localStorage is not supported');\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = state => {\r\n  return {\r\n    addedMemos: state.memos,\r\n    tempMemos: state.tempMemos,\r\n    showStoredMemo: state.showStoredMemo,\r\n    memosFetched: state.memosFetched,\r\n    filterColor: state.filterColor,\r\n    draggable: state.draggable,\r\n    toastMsg: state.toastMsg,\r\n    newMemoSaved: state.newMemoSaved\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectMemo: (title, content) => dispatch({ type: 'SELECT_MEMO', memoTitle: title, memoContent: content }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onStoreId: (id) => dispatch({ type: 'STORE_ID', memoId: id }),\r\n    onStoreColor: (color) => dispatch({ type: 'STORE_COLOR', memoColor: color }),\r\n    onFetchMemos: () => dispatch(actions.fetchMemos()),\r\n    onUpdateId: () => dispatch({ type: 'UPDATE_ID' })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Memos));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios-orders';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button } from '@material-ui/core';\r\n\r\nimport './AddMemo.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  }\r\n});\r\n\r\nclass AddMemo extends Component {\r\n\r\n\tstate = {\r\n\t\ttitle: \"\",\r\n\t\tcontent: \"\",\r\n\t\thasTitle: false,\r\n\t\thasContent: false\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\tthis.props.onToggleModal();\r\n\t\tthis.deleteInput();\t// Clear previous input fields\r\n\t}\r\n\r\n\tsaveMemo = () => {\r\n\t\tconst memoData = {\r\n\t\t\tid: new Date().getTime(),\r\n\t\t\ttitle: this.state.title,\r\n\t\t\tcontent: this.state.content,\r\n\t\t\tcolor: 'YELLOW',\r\n\t\t\tarchived: false\r\n\t\t}\r\n\t\tthis.props.onSaveMemo(memoData);\r\n\t}\r\n\r\n\t// Clear previous input fields\r\n\tdeleteInput = () => {\r\n\t\tthis.setState({\r\n\t\t\ttitle: '',\r\n\t\t\tcontent: '',\r\n\t\t\thasTitle: false,\r\n\t\t\thasContent: false\r\n\t\t})\r\n\t}\r\n\r\n\tsaveMemoClicked = () => {\r\n\t\tthis.toggle();\r\n\t\tthis.saveMemo();\r\n\t}\r\n\r\n\ttitleChangedHandler = (event) => {\r\n\t\tif (event.target.value === null || event.target.value === '') {\r\n\t\t\tthis.setState({ hasTitle: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ hasTitle: true });\r\n\t\t}\r\n\t\tthis.setState({ title: event.target.value });\r\n\t}\r\n\r\n\tcontentChangedHandler = (event) => {\r\n\t\tif (event.target.value === null || event.target.value === '') {\r\n\t\t\tthis.setState({ hasContent: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ hasContent: true });\r\n\t\t}\r\n\t\tthis.setState({ content: event.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tlet atLeastOneInputHasValue = this.state.hasTitle || this.state.hasContent;\r\n\r\n    const { classes } = this.props;\r\n\r\n    let dialog = null;\r\n\t\tif (!this.props.showStoredMemo) {\r\n      dialog = (\r\n        <div>\r\n          <Dialog\r\n            open={this.props.showModal}\r\n            onClose={this.toggle}\r\n            fullWidth={true}\r\n            maxWidth=\"sm\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Create New Memo</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"normal\"\r\n                id=\"memoTitle\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                onChange={this.titleChangedHandler}\r\n                value={this.state.title}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"memoContent\"\r\n                label=\"Content\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                multiline\r\n                rows='10'\r\n                onChange={this.contentChangedHandler}\r\n                value={this.state.content}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions className={classes.root}>\r\n              <Button \r\n                onClick={this.saveMemoClicked} \r\n                variant=\"text\" \r\n                color=\"primary\" \r\n                className={classes.button} \r\n                disabled={!atLeastOneInputHasValue}>\r\n                SAVE\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n        {dialog}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n    showStoredMemo: state.showStoredMemo,\r\n\t\tshowModal: state.showModal\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonSaveMemo: (memoData) => dispatch(actions.saveMemo(memoData)),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' })\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddMemo, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ListItemSecondaryAction, \r\n          Typography, \r\n          Toolbar, \r\n          AppBar, \r\n          IconButton, \r\n          ListItemText, \r\n          ListItemIcon, \r\n          ListItem, \r\n          List, \r\n          SwipeableDrawer, \r\n          Switch,\r\n          Fab,\r\n          Icon,\r\n          Link,\r\n          Tooltip } from '@material-ui/core';\r\nimport {  Create, \r\n          DragHandle,\r\n          ArchiveOutlined } from '@material-ui/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport './SideMenu.css';\r\n\r\nconst styles = theme => ({\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    paddingLeft: 20\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12\r\n  },\r\n  searchIcon: {\r\n    marginRight: -12\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2,\r\n    zIndex: theme.zIndex.tooltip\r\n  },\r\n  credit: {\r\n    bottom: theme.spacing.unit * 1,\r\n    position: 'absolute'\r\n  },\r\n  link: {\r\n    margin: theme.spacing.unit * 3,\r\n    display: 'block'\r\n  }\r\n});\r\n\r\n\r\nclass SideMenu extends Component {\r\n  state = {\r\n    menu: false,\r\n    checked: false\r\n    // openNestedList: false\r\n  };\r\n\r\n  dragToggleSwitched = event => {\r\n    this.setState({ checked: !this.state.checked });\r\n\r\n    if (event.target.checked === true) {\r\n      // Drag mode ON\r\n      this.props.onToggleDraggable(true);\r\n    } else {\r\n      // Drag mode OFF\r\n      this.props.onToggleDraggable(false);\r\n    }\r\n  };\r\n\r\n  closeDrawer = () => {\r\n    this.setState({ menu: false });\r\n  };\r\n\r\n  openDrawer = () => {\r\n    this.setState({ menu: true });\r\n  };\r\n\r\n  // Create new memo\r\n  createOnClick = () => {\r\n    this.closeDrawer();\r\n    this.props.onCreateMemo();\r\n  }\r\n\r\n  // Search icon is clicked\r\n  searchClicked = () => {\r\n    this.props.onSearch();  // Show all memos and ready to filter memos by text\r\n    this.props.history.push('/memo/filter'); // Redirect to that path\r\n    this.props.onToggleDraggable(false);  // Turn drag mode OFF\r\n  }\r\n\r\n  // When web app title is clicked, scroll to top\r\n  titleClicked = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  showArchivedMemos = () => {\r\n    this.props.history.push('/memo/archive');\r\n    this.props.onToggleDraggable(false);  // Turn drag mode OFF\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const fullList = (\r\n      <div className={classes.fullList}>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <DragHandle color=\"primary\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Drag Memo\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                onChange={event => this.dragToggleSwitched(event)}\r\n                checked={this.state.checked}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n\r\n          <ListItem \r\n            button\r\n            onClick={this.createOnClick}>\r\n            <ListItemIcon>\r\n              <Create color=\"primary\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Create New Memo\" />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={this.showArchivedMemos}>\r\n            <ListItemIcon>\r\n              <ArchiveOutlined color=\"primary\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Archive\" />\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    const links = (\r\n      <Typography className={classes.credit}>\r\n        <Link \r\n          href=\"https://github.com/hkKevin/memo\" \r\n          target=\"_blank\" \r\n          rel=\"noopener\" \r\n          className={classes.link} \r\n          color=\"textSecondary\">\r\n          GitHub Repository\r\n        </Link>\r\n        <Link \r\n          href=\"https://github.com/hkKevin\" \r\n          target=\"_blank\" \r\n          rel=\"noopener\" \r\n          className={classes.link} \r\n          color=\"textSecondary\">\r\n          Developed by Pak Kiu Leung (Kevin)\r\n        </Link>\r\n      </Typography>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <AppBar color=\"inherit\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton \r\n               color=\"primary\"\r\n               onClick={this.openDrawer} \r\n               className={classes.menuButton} \r\n               aria-label=\"Menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Tooltip title=\"Scroll to top\">\r\n              <Typography\r\n                id=\"appTitle\"\r\n                className={classes.title}\r\n                onClick={this.titleClicked}\r\n                variant=\"h6\" \r\n                color=\"primary\">\r\n                MEMO\r\n              </Typography>\r\n            </Tooltip>\r\n            <Tooltip title=\"Find\">\r\n              <IconButton \r\n                color=\"primary\" \r\n                className={classes.searchIcon}\r\n                onClick={this.searchClicked}>\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Tooltip title=\"New\">\r\n          <Fab \r\n            color=\"primary\" \r\n            aria-label=\"Edit\" \r\n            className={classes.fab}\r\n            size=\"medium\"\r\n            onClick={this.createOnClick}>\r\n            <Icon>edit_icon</Icon>\r\n          </Fab>\r\n        </Tooltip>\r\n\r\n        <SwipeableDrawer \r\n          anchor=\"left\"\r\n          open={this.state.menu}  // Is the menu opened or closed\r\n          onOpen={this.openDrawer}  // Open the menu\r\n          onClose={this.closeDrawer} /* Close the menu*/ >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\">\r\n            {fullList}\r\n            {links}\r\n          </div>\r\n        </SwipeableDrawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onToggleDraggable: (draggable) => dispatch({ type: 'TOGGLE_DRAGGABLE', isDraggable: draggable }),\r\n    onCreateMemo: () => dispatch({ type: 'CREATE_MEMO' }),\r\n    onSearch: () => dispatch({ type: 'SEARCH_MEMO' })\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SideMenu));","import axios from '../../axios-orders';\r\n\r\n// Action Creators:\r\n\r\nexport const saveMemoSuccess = (memoData, firebaseItemId) => {\r\n  return {\r\n    type: 'SAVE_MEMO_SUCCESS',\r\n    memoData: memoData,\r\n    firebaseItemId: firebaseItemId,\r\n  };\r\n};\r\n\r\nexport const saveMemo = (memoData)  => {\r\n  return dispatch => {\r\n    axios.post('/memos.json', memoData)\r\n      .then(response => {\r\n        // console.log(response.data);\r\n        dispatch(saveMemoSuccess(memoData, response.data.name));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  };\r\n};\r\n\r\nexport const fetchMemosSuccess = (memos) => {\r\n  return {\r\n    type: 'FETCH_MEMOS_SUCCESS',\r\n    memos: memos\r\n  }\r\n}\r\n\r\nexport const fetchMemos = () => {\r\n  return dispatch => {\r\n    // axios.get('/memos.json')\r\n    //   .then(response => {\r\n    //     const fetchedMemos = [];\r\n    //     for (let key in response.data) {\r\n    //       fetchedMemos.push( response.data[key] );\r\n    //     }\r\n    //     dispatch(fetchMemosSuccess(fetchedMemos));\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log(error);\r\n    //   })\r\n    const fetchedMemos = []\r\n    fetch('https://memo-a117b.firebaseio.com/memos.json')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        // console.log(response);\r\n        for (let key in response) {\r\n          fetchedMemos.push( response[key] );\r\n        }\r\n        dispatch(fetchMemosSuccess(fetchedMemos));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  };\r\n};\r\n\r\nexport const updateMemoSuccess = (updatedMemos) => {\r\n  return {\r\n    type: 'UPDATE_MEMO_SUCCESS',\r\n    memos: updatedMemos\r\n  };\r\n};\r\n\r\nexport const updateMemo = () => {\r\n  return {\r\n    type: 'UPDATE_MEMO',\r\n  }\r\n};","export {\r\n  saveMemo,\r\n  fetchMemos,\r\n  updateMemo\r\n} from './memos';\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar,\r\n          Toolbar,\r\n          IconButton,\r\n          Typography,\r\n          TextField,\r\n          Tooltip,\r\n          CircularProgress } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/CancelOutlined';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './FilteredMemos.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Toast from '../../components/UI/Toast/Toast';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst styles = theme => ({\r\n  searchContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing.unit * 9,\r\n    marginBottom: -theme.spacing.unit * 9\r\n  },\r\n  colorContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing.unit * 10,\r\n    marginBottom: -theme.spacing.unit * 10,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 220,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    paddingLeft: 20\r\n  },\r\n  clearIcon: {\r\n    marginRight: -12\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing.unit * 30,\r\n  }\r\n});\r\n\r\nclass FilteredMemos extends Component {\r\n\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasTitle: false,\r\n      hasContent: false,\r\n      dropdownOpen: false,\r\n      memoStyle: {\r\n        'YELLOW': {\r\n          border: '1px solid #feef9c',\r\n          backgroundColor: '#feef9c'\r\n        },\r\n        'PURPLE': {\r\n          border: '1px solid #dcdfff',\r\n          backgroundColor: '#dcdfff'\r\n        },\r\n        'ORANGE': {\r\n          border: '1px solid #feccaf',\r\n          backgroundColor: '#feccaf'\r\n        },\r\n        'GREEN': {\r\n          border: '1px solid #b1ffb1',\r\n          backgroundColor: '#b1ffb1'\r\n        },\r\n        'BLUE': {\r\n          border: '1px solid #d8f1ff',\r\n          backgroundColor: '#d8f1ff'\r\n        },\r\n        'PINK': {\r\n          border: '1px solid #feb0bc',\r\n          backgroundColor: '#feb0bc'\r\n        }\r\n      },\r\n      searchedWord: \"\"\r\n    };\r\n  }\r\n\r\n  memoClicked = (memo) => {\r\n    this.toggle();\r\n    this.selectMemo(memo);\r\n    this.storeId(memo);\r\n    this.storeColor(memo);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  selectMemo = (memo) => {\r\n    this.checkInput(memo);\r\n    this.props.onSelectMemo(memo.title, memo.content)\r\n  }\r\n\r\n  checkInput = (memo) => {\r\n    if (memo.title === null || memo.title === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n\r\n    if (memo.content === null || memo.content === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n  }\r\n\r\n  storeId = (memo) => {\r\n    this.props.onStoreId(memo.id)\r\n  }\r\n\r\n  storeColor = (memo) => {\r\n    this.props.onStoreColor(memo.color)\r\n  }\r\n\r\n  searchOnChange = (event) => {\r\n    this.setState({\r\n      searchedWord: event.target.value\r\n    });\r\n    this.props.onSearch();\r\n    this.generateAddedMemos();\r\n  }\r\n\r\n  generateAddedMemos = () => {\r\n    if (this.props.addedMemos.length > 0) {\r\n\r\n      let filteredMemos = \"\"\r\n      if ( !this.props.searchingMemo ) {\r\n        // Filtered memos by color\r\n        filteredMemos = this.props.addedMemos.filter(memo => memo.color === this.props.filterColor);\r\n      } else {\r\n        // Filtered memos by text\r\n        filteredMemos = this.props.addedMemos.filter(\r\n          memo => memo.title.toLowerCase().includes(this.state.searchedWord.toLowerCase()) || \r\n                  memo.content.toLowerCase().includes(this.state.searchedWord.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      return filteredMemos.map(memo => (\r\n        <div\r\n          key={memo.id}\r\n          onDoubleClick={() => this.memoClicked(memo)}\r\n          style={this.state.memoStyle[memo.color]}\r\n          className='filteredMemo'\r\n        >\r\n\r\n          <h3>{memo.title}</h3>\r\n          <hr />\r\n          <div>{memo.content}</div>\r\n        </div>\r\n\r\n      ));\r\n    } \r\n  }\r\n\r\n  // When web app title is clicked, scroll to top\r\n  titleClicked = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  // One of the color is clicked\r\n  colorClicked = (filterColor) => {\r\n    this.props.onFilterMemos(filterColor);  // Pass the filter color to Redux\r\n    this.setState({ searchedWord: \"\" }); // Clear the search text\r\n  }\r\n\r\n  clearFilterClicked = () => {\r\n    // Remove all filters\r\n    this.setState({ searchedWord: \"\" });\r\n    this.props.onClearFilter();\r\n  }\r\n\r\n\trender() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    let filterControl = null;\r\n    filterControl = (\r\n      <>\r\n        <div className={classes.searchContainer}>\r\n          <TextField\r\n            id=\"standard-search\"\r\n            key=\"searchField\"\r\n            name=\"searchField\"\r\n            label=\"Find...\"\r\n            type=\"search\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            autoFocus\r\n            onChange={this.searchOnChange}\r\n            value={this.state.searchedWord}\r\n          />\r\n        </div>\r\n        <div className={classes.colorContainer}>\r\n          <Tooltip title=\"Blue\">\r\n            <div \r\n              className=\"findColor colorBlue\"\r\n              onClick={() => this.colorClicked(\"BLUE\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Green\">\r\n            <div \r\n              className=\"findColor colorGreen\"\r\n              onClick={() => this.colorClicked(\"GREEN\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Orange\">\r\n            <div \r\n              className=\"findColor colorOrange\"\r\n              onClick={() => this.colorClicked(\"ORANGE\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Pink\">\r\n            <div \r\n              className=\"findColor colorPink\"\r\n              onClick={() => this.colorClicked(\"PINK\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Purple\">\r\n            <div \r\n              className=\"findColor colorPurple\"\r\n              onClick={() => this.colorClicked(\"PURPLE\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Yellow\">\r\n            <div \r\n              className=\"findColor colorYellow\"\r\n              onClick={() => this.colorClicked(\"YELLOW\")}></div>\r\n          </Tooltip>\r\n        </div>\r\n      </>\r\n      \r\n    );\r\n    \r\n\t\treturn (\r\n\t\t\t<div>\r\n        <AppBar color=\"inherit\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton \r\n              onClick={() => this.props.history.goBack()} \r\n              className={classes.menuButton} \r\n              aria-label=\"Menu\">\r\n              <ArrowBack color=\"primary\" />\r\n            </IconButton>\r\n            <Tooltip title=\"Scroll to top\">\r\n              <Typography \r\n                id=\"appTitle\"\r\n                className={classes.title}\r\n                onClick={this.titleClicked}\r\n                variant=\"h6\" \r\n                color=\"primary\">\r\n                Filter\r\n              </Typography>\r\n            </Tooltip>\r\n            <Tooltip title=\"Clear filter\">\r\n              <IconButton \r\n                color=\"primary\"\r\n                className={classes.clearIcon}\r\n                onClick={this.clearFilterClicked}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {/* {this.props.searchingMemo ? (searchField) : null} */}\r\n\r\n        {filterControl}\r\n        {this.props.memosFetched\r\n          ?\r\n          (\r\n          <div className=\"filteredLayout\">\r\n            {this.generateAddedMemos()}\r\n          </div>\r\n          )\r\n          : (<CircularProgress color=\"secondary\" className={classes.progress} />)\r\n        }\r\n\r\n        {this.props.showStoredMemo ? <Modal /> : null}\r\n        \r\n        <Toast toastMsg={this.props.toastMsg} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    addedMemos: state.memos,\r\n    tempMemos: state.tempMemos,\r\n    showStoredMemo: state.showStoredMemo,\r\n    memosFetched: state.memosFetched,\r\n    filterColor: state.filterColor,\r\n    draggable: state.draggable,\r\n    searchingMemo: state.searchingMemo,\r\n    toastMsg: state.toastMsg\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectMemo: (title, content) => dispatch({ type: 'SELECT_MEMO', memoTitle: title, memoContent: content }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onStoreId: (id) => dispatch({ type: 'STORE_ID', memoId: id }),\r\n    onStoreColor: (color) => dispatch({ type: 'STORE_COLOR', memoColor: color }),\r\n    onFetchMemos: () => dispatch(actions.fetchMemos()),\r\n    onFilterMemos: (filterColor) => dispatch({ type: 'FILTER_MEMOS', filterColor: filterColor }),\r\n    onSearch: () => dispatch({ type: 'SEARCH_MEMO' }),\r\n    onClearFilter: () => dispatch({ type: 'CLEAR_FILTER' })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FilteredMemos));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar,\r\n          Toolbar,\r\n          IconButton,\r\n          Typography,\r\n          Tooltip,\r\n          CircularProgress } from '@material-ui/core';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Toast from '../../components/UI/Toast/Toast';\r\n\r\nconst styles = theme => ({\r\n  menuButton: {\r\n    marginLeft: -12\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    paddingLeft: 20\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing.unit * 20,\r\n  }\r\n});\r\n\r\nlet archivedMemos = \"\"\r\n\r\nclass ArchivedMemos extends Component {\r\n\r\n  state = {\r\n    memoStyle: {\r\n      'YELLOW': {\r\n        border: '1px solid #feef9c',\r\n        backgroundColor: '#feef9c'\r\n      },\r\n      'PURPLE': {\r\n        border: '1px solid #dcdfff',\r\n        backgroundColor: '#dcdfff'\r\n      },\r\n      'ORANGE': {\r\n        border: '1px solid #feccaf',\r\n        backgroundColor: '#feccaf'\r\n      },\r\n      'GREEN': {\r\n        border: '1px solid #b1ffb1',\r\n        backgroundColor: '#b1ffb1'\r\n      },\r\n      'BLUE': {\r\n        border: '1px solid #d8f1ff',\r\n        backgroundColor: '#d8f1ff'\r\n      },\r\n      'PINK': {\r\n        border: '1px solid #feb0bc',\r\n        backgroundColor: '#feb0bc'\r\n      }\r\n    }\r\n  }\r\n  \r\n  generateAddedMemos = () => {\r\n\r\n    if (this.props.addedMemos.length > 0) {\r\n\r\n      archivedMemos = this.props.addedMemos.filter(memo => memo.archived === true);\r\n      \r\n      return archivedMemos.map(memo => (\r\n        <div\r\n          key={memo.id}\r\n          onDoubleClick={() => this.memoClicked(memo)}\r\n          style={this.state.memoStyle[memo.color]}\r\n          className='filteredMemo'\r\n        >\r\n\r\n          <h3>{memo.title}</h3>\r\n          <hr />\r\n          <div>{memo.content}</div>\r\n        </div>\r\n\r\n      ));\r\n    } \r\n  }\r\n\r\n  memoClicked = (memo) => {\r\n    this.toggle();\r\n    this.selectMemo(memo);\r\n    this.storeId(memo);\r\n    this.storeColor(memo);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  selectMemo = (memo) => {\r\n    this.checkInput(memo);\r\n    this.props.onSelectMemo(memo.title, memo.content)\r\n  }\r\n\r\n  checkInput = (memo) => {\r\n    if (memo.title === null || memo.title === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n\r\n    if (memo.content === null || memo.content === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n  }\r\n\r\n  storeId = (memo) => {\r\n    this.props.onStoreId(memo.id)\r\n  }\r\n\r\n  storeColor = (memo) => {\r\n    this.props.onStoreColor(memo.color)\r\n  }\r\n\r\n  // When web app title is clicked, scroll to top\r\n  titleClicked = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <AppBar color=\"inherit\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton \r\n              onClick={() => this.props.history.goBack()} \r\n              className={classes.menuButton} \r\n              aria-label=\"Menu\">\r\n              <ArrowBack color=\"primary\" />\r\n            </IconButton>\r\n            <Tooltip title=\"Scroll to top\">\r\n              <Typography \r\n                id=\"appTitle\"\r\n                className={classes.title}\r\n                onClick={this.titleClicked}\r\n                variant=\"h6\" \r\n                color=\"primary\">\r\n                Archive\r\n              </Typography>\r\n            </Tooltip>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {this.props.memosFetched\r\n          ?\r\n          (\r\n          <div className=\"filteredLayout\">\r\n            {this.generateAddedMemos()}\r\n          </div>\r\n          )\r\n          : (<CircularProgress color=\"secondary\" className={classes.progress} />)\r\n        }\r\n\r\n        {this.props.showStoredMemo ? <Modal /> : null}\r\n\r\n        <Toast toastMsg={this.props.toastMsg} />\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nexport const mapStateToProps = state => {\r\n  return {\r\n    addedMemos: state.memos,\r\n    memosFetched: state.memosFetched,\r\n    showStoredMemo: state.showStoredMemo,\r\n    toastMsg: state.toastMsg\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectMemo: (title, content) => dispatch({ type: 'SELECT_MEMO', memoTitle: title, memoContent: content }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onStoreId: (id) => dispatch({ type: 'STORE_ID', memoId: id }),\r\n    onStoreColor: (color) => dispatch({ type: 'STORE_COLOR', memoColor: color }),\r\n    onFetchMemos: () => dispatch(actions.fetchMemos())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ArchivedMemos));","import React, { Component } from 'react';\nimport { Route, Redirect, Switch, withRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Memos from './containers/Memos/Memos';\nimport FilteredMemos from './containers/FilteredMemos/FilteredMemos';\nimport ArchivedMemos from './containers/ArchivedMemos/ArchivedMemos';\n\nclass App extends Component {\n  \n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path='/memo/archive' component={ArchivedMemos} />\n        <Route path='/memo/filter' component={FilteredMemos} />\n        <Route path='/memo' exact component={Memos} />\n        <Redirect to='/memo' />\n      </Switch>\n    );\n\n\n\n    return (\n      <div className=\"App\">\n        {routes}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase';\r\n\r\n// Action Reducer\r\n\r\nconst initialState = {\r\n  memos: [],\r\n  selectedMemoTitle: null,\r\n  selectedMemoContent: null,\r\n  selectedId: null,\r\n  selectedMemoColor: null,\r\n  showModal: false,\r\n  showNewMemoDialog: false,\r\n  showStoredMemo: false,\r\n  filterColor: \"\",\r\n  arrIndex: 0,\r\n  memosFetched: false,\r\n  draggable: false,\r\n  searchingMemo: true,\r\n  toastMsg: \"\",\r\n  newMemoSaved: false\r\n}\r\n\r\nconst memos = (state = initialState, action) => {\r\n\r\n  switch ( action.type ) {\r\n\r\n    // Within both AddMemo.js & Memos.js:\r\n\r\n    case 'TOGGLE_MODAL':\r\n      return { \r\n        ...state,\r\n        showModal: !state.showModal\r\n      }\r\n\r\n    // Within AddMemo.js:\r\n\r\n    case 'SAVE_MEMO_SUCCESS':\r\n      const newMemo = {\r\n        ...action.memoData,\r\n        id: action.firebaseItemId   // Replace the temp id in Redux state with firebaseItemId\r\n      }\r\n      return {\r\n        ...state,\r\n        memos: state.memos.concat(newMemo),\r\n        selectedId: newMemo.id,\r\n        newMemoSaved: true,   // Ready to Update(Sync) memo ID\r\n        toastMsg: \"Memo saved\" // Notify user when the new memo saved\r\n      }\r\n\r\n    case 'FETCH_MEMOS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        memos: action.memos,\r\n        memosFetched: true,\r\n        toastMsg: \"Double-click to edit memo\" // Notify user when the web app loaded/ reloaded\r\n      }\r\n\r\n\r\n    // Within Memos.js:\r\n\r\n    case 'HIDE_TOAST':\r\n      return {\r\n        ...state,\r\n        toastMsg: \"\" // Set toastMsg to empty string -> Hide the toast\r\n      }\r\n\r\n    case 'UPDATE_ID':\r\n      const editedmemos = state.memos.map( (memo, index) => {\r\n      // Only edit the newly added memo in the Redux memos array\r\n      if (memo.id === state.selectedId) {\r\n        memo.id = state.selectedId;\r\n        state.arrIndex = index\r\n      }\r\n      return memo;\r\n      })\r\n      \r\n      const firebaseDb = firebase.database();\r\n      const updateIdUpdates = {};\r\n      // Update the selected array element to specific child node of Firebase\r\n      updateIdUpdates['/memos/' + state.selectedId] = editedmemos[state.arrIndex];\r\n      firebaseDb.ref()\r\n        .update(updateIdUpdates)\r\n        .then(() => {\r\n          // Replaced the temp id in firebase with firebaseItemId\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      // return state;\r\n      return {\r\n        ...state,\r\n        newMemoSaved: false\r\n      };\r\n      \r\n\r\n    case 'STORE_COLOR':\r\n      return {\r\n        ...state,\r\n        selectedMemoColor: action.memoColor\r\n      }\r\n\r\n\r\n    case 'DELETE_MEMO':\r\n      const renewMemos = state.memos.map( (memo, index) => {\r\n        // Only delete selected memo that is in the Redux memos array\r\n        if (memo.id === action.memoId) {\r\n          memo = null\r\n          state.arrIndex = index\r\n        }\r\n        return memo;\r\n        })\r\n\r\n      let deleteMemoUpdates = {};\r\n      deleteMemoUpdates['/memos/' + action.memoId] = renewMemos[state.arrIndex];\r\n      action.firebaseDb.ref().update(deleteMemoUpdates)\r\n        .then(() => {\r\n          // memo deleted in firebase.       \r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n      return { \r\n        ...state,\r\n        memos: state.memos.filter(memo => memo.id !== action.memoId),\r\n        toastMsg: \"Memo deleted\"\r\n      }      \r\n\r\n\r\n    case 'SELECT_MEMO':      \r\n      return { \r\n        ...state,\r\n        selectedMemoTitle: action.memoTitle,\r\n        selectedMemoContent: action.memoContent,\r\n        showStoredMemo: true\r\n      }\r\n\r\n    case 'STORE_ID':      \r\n      return { \r\n        ...state,\r\n        selectedId: action.memoId\r\n      }\r\n\r\n    case 'CHANGE_TITLE':      \r\n      return { \r\n        ...state,\r\n        selectedMemoTitle: action.memoTitle\r\n      }\r\n\r\n    case 'CHANGE_CONTENT':      \r\n      return { \r\n        ...state,\r\n        selectedMemoContent: action.memoContent\r\n      }\r\n\r\n    case 'UPDATE_MEMO':\r\n      const updatedMemos = state.memos.map( (memo, index) => {\r\n      // Only edit the selected memo in the Redux memos array\r\n      if (memo.id === state.selectedId) {\r\n        memo.id = state.selectedId;\r\n        memo.title =  state.selectedMemoTitle;\r\n        memo.content = state.selectedMemoContent;\r\n        state.arrIndex = index;\r\n      }\r\n      return memo;\r\n      })\r\n      \r\n      const updateMemoUpdates = {};\r\n      // Update the selected array element to specific child node of Firebase\r\n      updateMemoUpdates['/memos/' + state.selectedId] = updatedMemos[state.arrIndex];\r\n      action.firebaseDb.ref()\r\n        .update(updateMemoUpdates)\r\n        .then(() => {\r\n          // memo updated in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      // return state;\r\n      return {\r\n        ...state,\r\n        toastMsg: \"Memo updated\"\r\n      }\r\n\r\n    case 'ARCHIVE_MEMO':\r\n      const archivedMemos = state.memos.map( (memo, index) => {\r\n        // Only edit the selected memo in the memos array\r\n        if (memo.id === state.selectedId) {\r\n          memo.archived = true;\r\n          state.arrIndex = index;\r\n        }\r\n        return memo;\r\n        })\r\n        \r\n      const archiveMemoUpdates = {};\r\n      // Update the selected array element to specific child node of Firebase\r\n      archiveMemoUpdates['/memos/' + state.selectedId] = archivedMemos[state.arrIndex];\r\n      action.firebaseDb.ref()\r\n        .update(archiveMemoUpdates)\r\n        .then(() => {\r\n          // memo archived in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      // return state;\r\n      return {\r\n        ...state,\r\n        toastMsg: \"Memo archived\"\r\n      }\r\n\r\n\r\n    case 'CHANGE_COLOR':\r\n      const colorChangedMemos = state.memos.map( (memo, index) => {\r\n        // Only edit selected memo in the memos array\r\n        if (memo.id === state.selectedId) {\r\n          memo.color = action.memoColor\r\n          state.arrIndex = index\r\n        }\r\n        return memo;\r\n      })\r\n\r\n      const changeColorUpdates = {};\r\n      \r\n      // Update the selected array element to specific child node of Firebase\r\n      changeColorUpdates['/memos/' + state.selectedId] = colorChangedMemos[state.arrIndex];\r\n      action.firebaseDb.ref()\r\n        .update(changeColorUpdates)\r\n        .then(() => {\r\n          // memo updated in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      return {\r\n        ...state,\r\n        memos: colorChangedMemos,\r\n        selectedMemoColor: action.memoColor,\r\n        toastMsg: \"Color updated\"\r\n      }\r\n    \r\n    // Only show memos with selected color\r\n    case 'FILTER_MEMOS':      \r\n      return { \r\n        ...state,\r\n        filterColor: action.filterColor,\r\n        searchingMemo: false\r\n      }\r\n\r\n    case 'CLEAR_FILTER':\r\n      return { \r\n        ...state,\r\n        filterColor: \"\",\r\n        searchingMemo: true\r\n      }\r\n\r\n    case 'TOGGLE_DRAGGABLE':      \r\n      return { \r\n        ...state,\r\n        draggable: action.isDraggable\r\n      }\r\n\r\n    case 'CREATE_MEMO':\r\n      return { \r\n        ...state,\r\n        showModal: true,\r\n        showStoredMemo: false\r\n      }\r\n    \r\n      // Filter memos by text\r\n    case 'SEARCH_MEMO':\r\n      return { \r\n        ...state,\r\n        searchingMemo: true\r\n      }\r\n    \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default memos;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/memos';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// composeEnhancers\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n// const store = createStore(reducer, composeEnhancers(\n//   applyMiddleware(thunk)\n// ));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#880e4f',\n    },\n    secondary: {\n      main: '#1a237e',\n    }\n  },\n  \n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </BrowserRouter>\n  </Provider>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\n// Toast is same as Snackbar\r\nclass Toast extends Component {\r\n\r\n  hideToast = (event, reason) => {\r\n    // Click away from the toast will not hide the toast\r\n    if (reason === 'clickaway') { \r\n      return; \r\n    }\r\n    // trigger the change of Redux state\r\n    this.props.onHideToast();\r\n  }\r\n\r\n  render() {\r\n\r\n let showToast = false;\r\n    // Notify user when the web app completed an action\r\n    if (this.props.toastMsg) {\r\n      showToast = true;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={showToast}\r\n          autoHideDuration={3000}\r\n          onClose={this.hideToast}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{this.props.toastMsg}</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onHideToast: () => dispatch({ type: 'HIDE_TOAST' })\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Toast);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport firebase from 'firebase';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MenuItem, \r\n          Select, \r\n          InputLabel, \r\n          FormControl, \r\n          Dialog, \r\n          DialogTitle,\r\n          DialogActions, \r\n          DialogContent,\r\n          TextField, \r\n          Button } from '@material-ui/core';\r\n\r\n// Modal is same as Dialog\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  }\r\n});\r\n\r\nclass Modal extends Component {\r\n\r\n  state = {\r\n    db: null,\r\n    showInnerModal: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Set up Firebase config for connecting to the db.\r\n    var config = {\r\n      apiKey: 'AIzaSyDgZKmgW7LpUpJmHkMpF0II4AcfHyfZFuo',\r\n      authDomain: 'memo-a117b.firebaseapp.com',\r\n      databaseURL: 'https://memo-a117b.firebaseio.com/'\r\n    };\r\n    // Prevent duplicate firebase app\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(config);\r\n    }\r\n    // firebase.initializeApp(config);\r\n    this.setState({ db: firebase.database() });\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  titleChangedHandler = (event) => {\r\n    if (event.target.value === null || event.target.value === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n    this.props.onChangeTitle(event.target.value);\r\n  }\r\n\r\n  contentChangedHandler = (event) => {\r\n    if (event.target.value === null || event.target.value === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n    this.props.onChangeContent(event.target.value);\r\n  }\r\n\r\n  colorSelected(event) {\r\n    this.changeColor(event.target.value);\r\n  }\r\n\r\n  changeColor = (color) => {\r\n    this.props.onChangeColor(color, this.state.db);\r\n  }\r\n\r\n  // First deletion button is clicked -> Open final deletion modal for confirmation \r\n  OuterDeleteBtnClicked = () => {\r\n    this.setState({ \r\n      showInnerModal: true\r\n    });\r\n  }\r\n\r\n  updateMemoClicked = () => {\r\n    this.toggle();\r\n    this.updateMemo();\r\n  }\r\n\r\n  updateMemo = () => {\r\n    this.props.onUpdateMemo(this.state.db);\r\n  }\r\n\r\n  innerModalToggle = () => {\r\n    this.setState(state => ({ \r\n      showInnerModal: !state.showInnerModal\r\n    }));\r\n  }\r\n\r\n  // Really delete the memo\r\n  innerDeleteBtnClicked = () => {\r\n    this.innerModalToggle();  // Close inner modal/ Close the final modal\r\n    this.toggle();  // Close outer modal/ Close the first modal\r\n    this.deleteMemo();  // Delete the memo on Firebase\r\n  }\r\n\r\n  // Delete the memo on Firebase\r\n  deleteMemo = () => {\r\n    this.props.onDeleteMemo(this.props.selectedId, this.state.db)\r\n  }\r\n\r\n  archiveMemo = () => {\r\n    this.toggle();\r\n    this.props.onArchiveMemo(this.state.db);\r\n  }\r\n\r\n  render() {\r\n\r\n    let atLeastOneInputHasValue = this.state.hasTitle || this.state.hasContent;\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Dialog\r\n            open={this.props.showModal}\r\n            onClose={this.toggle}\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n          >\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"normal\"\r\n                id=\"memoTitle\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                onChange={this.titleChangedHandler}\r\n                value={this.props.selectedMemoTitle}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"memoContent\"\r\n                label=\"Content\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                multiline\r\n                rows='10'\r\n                onChange={this.contentChangedHandler}\r\n                value={this.props.selectedMemoContent}\r\n              />\r\n              <FormControl \r\n                required \r\n                className={classes.formControl}>\r\n                <InputLabel>Color</InputLabel>\r\n                  <Select\r\n                    value={this.props.selectedMemoColor}\r\n                    onChange={(event) => this.colorSelected(event)}\r\n                    name=\"color\"\r\n                    className={classes.selectEmpty}\r\n                  >\r\n                    <MenuItem value=\"BLUE\">Blue</MenuItem>\r\n                    <MenuItem value=\"GREEN\">Green</MenuItem>\r\n                    <MenuItem value=\"ORANGE\">Orange</MenuItem>\r\n                    <MenuItem value=\"PINK\">Pink</MenuItem>\r\n                    <MenuItem value=\"PURPLE\">Purple</MenuItem>\r\n                    <MenuItem value=\"YELLOW\">Yellow</MenuItem>\r\n                  </Select>\r\n              </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={this.archiveMemo}\r\n                variant=\"text\"\r\n                color=\"default\"\r\n                className={classes.button}>\r\n                ARCHIVE\r\n              </Button>\r\n              <Button \r\n                onClick={this.OuterDeleteBtnClicked} \r\n                variant=\"outlined\" \r\n                color=\"primary\" \r\n                className={classes.button}>\r\n                DELETE\r\n              </Button>\r\n              <Button \r\n                onClick={this.updateMemoClicked} \r\n                variant=\"contained\" \r\n                color=\"secondary\" \r\n                className={classes.button} \r\n                disabled={!atLeastOneInputHasValue}>\r\n                UPDATE\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={this.state.showInnerModal}\r\n            onClose={this.innerModalToggle}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Delete this memo?\"}</DialogTitle>\r\n            <DialogActions>\r\n              <Button \r\n                onClick={this.innerModalToggle} \r\n                variant=\"text\" \r\n                color=\"primary\">\r\n                CANCEL\r\n              </Button>\r\n              <Button \r\n                onClick={this.innerDeleteBtnClicked} \r\n                variant=\"outlined\" \r\n                color=\"secondary\" \r\n                className={classes.button}>\r\n                DELETE\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = state => {\r\n  return {    \r\n    showModal: state.showModal,\r\n    selectedMemoTitle: state.selectedMemoTitle,\r\n    selectedMemoContent: state.selectedMemoContent,\r\n    selectedMemoColor: state.selectedMemoColor,\r\n    selectedId: state.selectedId,\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteMemo: (id, db) => dispatch({ type: 'DELETE_MEMO', memoId: id, firebaseDb: db }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onChangeTitle: (title) => dispatch({ type: 'CHANGE_TITLE', memoTitle: title }),\r\n    onChangeContent: (content) => dispatch({ type: 'CHANGE_CONTENT', memoContent: content }),\r\n    onUpdateMemo: (db) => dispatch({ type: 'UPDATE_MEMO', firebaseDb: db }),\r\n    onChangeColor: (color, db) => dispatch({ type: 'CHANGE_COLOR', memoColor: color, firebaseDb: db }),\r\n    onArchiveMemo: (db) => dispatch({ type:'ARCHIVE_MEMO', firebaseDb: db})\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Modal));"],"sourceRoot":""}