{"version":3,"sources":["axios-orders.js","containers/Memos/Memos.js","containers/AddMemo/AddMemo.js","components/UI/SideMenu/SideMenu.js","store/actions/memos.js","store/actions/index.js","containers/FilteredMemos/FilteredMemos.js","containers/ArchivedMemos/ArchivedMemos.js","App.js","serviceWorker.js","store/reducers/memos.js","index.js","components/UI/Toast/Toast.js","components/UI/Modal/Modal.js"],"names":["axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","instance","n","axios","create","baseURL","ResponsiveReactGridLayout","WidthProvider","Responsive","Memos","props","_this","Object","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","memoClicked","memo","toggle","selectMemo","storeId","storeColor","onToggleModal","checkInput","onSelectMemo","title","content","setState","hasTitle","hasContent","onStoreId","id","onStoreColor","color","generateAddedMemos","addedMemos","length","filter","archived","map","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","key","onDoubleClick","style","state","memoStyle","className","data-grid","x","y","w","h","draggable","onLayoutChange","bind","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","dropdownOpen","db","layouts","getFromLS","YELLOW","border","backgroundColor","PURPLE","ORANGE","GREEN","BLUE","PINK","onFetchMemos","layout","newLayout","layoutName","value","global","localStorage","setItem","JSON","stringify","console","error","_this2","memoEmpty","memosFetched","_material_ui_icons_NoteOutlined__WEBPACK_IMPORTED_MODULE_11___default","fontSize","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","variant","classes","_components_UI_SideMenu_SideMenu__WEBPACK_IMPORTED_MODULE_14__","history","_containers_AddMemo_AddMemo__WEBPACK_IMPORTED_MODULE_13__","breakpoints","lg","md","sm","xs","xxs","cols","rowHeight","isDraggable","progress","showStoredMemo","_components_UI_Modal_Modal__WEBPACK_IMPORTED_MODULE_16__","_components_UI_Toast_Toast__WEBPACK_IMPORTED_MODULE_15__","toastMsg","React","PureComponent","emptyObject","data","isEmpty","keys","constructor","savedLayout","getItem","parse","minW","maxW","connect","memos","tempMemos","filterColor","dispatch","type","memoTitle","memoContent","memoId","memoColor","actions","withStyles","theme","marginTop","spacing","unit","AddMemo","deleteInput","saveMemo","memoData","Date","getTime","onSaveMemo","saveMemoClicked","titleChangedHandler","event","target","contentChangedHandler","atLeastOneInputHasValue","dialog","react__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","open","showModal","onClose","fullWidth","maxWidth","autoFocus","margin","label","required","onChange","multiline","rows","root","onClick","button","disabled","Component","input","display","formControl","minWidth","SideMenu","menu","checked","dragToggleSwitched","onToggleDraggable","closeDrawer","openDrawer","createOnClick","onCreateMemo","searchClicked","onSearch","push","titleClicked","document","body","scrollTop","documentElement","showArchivedMemos","fullList","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_9__","primary","links","credit","href","rel","link","position","menuButton","aria-label","_material_ui_icons_Menu__WEBPACK_IMPORTED_MODULE_11___default","searchIcon","_material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_10___default","fab","size","anchor","onOpen","tabIndex","role","width","flexGrow","textAlign","paddingTop","paddingBottom","paddingLeft","marginLeft","marginRight","bottom","right","zIndex","tooltip","post","then","response","firebaseItemId","saveMemoSuccess","name","updateId","catch","log","fetchMemos","fetchedMemos","fetch","ok","Error","statusText","json","d","__webpack_exports__","memos_saveMemo","FilteredMemos","classCallCheck","possibleConstructorReturn","getPrototypeOf","searchOnChange","searchedWord","searchingMemo","toLowerCase","includes","react_default","colorClicked","onFilterMemos","clearFilterClicked","onClearFilter","filterControl","Fragment","searchContainer","index_es","textField","colorContainer","goBack","ArrowBack_default","clearIcon","CancelOutlined_default","Modal","Toast","justifyContent","alignItems","marginBottom","ArchivedMemos","archiveEmpty","archivedMemos","icons_index_es","App","routes","react_router","path","component","exact","to","withRouter","Boolean","window","location","hostname","match","initialState","selectedMemoTitle","selectedMemoContent","selectedId","selectedMemoColor","showNewMemoDialog","arrIndex","arguments","undefined","action","objectSpread","newMemo","concat","editedmemos","index","firebaseDb","firebase","database","updateIdUpdates","ref","update","renewMemos","deleteMemoUpdates","updatedMemos","updateMemoUpdates","archiveMemoUpdates","colorChangedMemos","changeColorUpdates","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","createMuiTheme","palette","main","secondary","ReactDOM","render","es","react_router_dom","styles","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","hideToast","reason","onHideToast","showToast","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","showInnerModal","onChangeTitle","onChangeContent","changeColor","onChangeColor","OuterDeleteBtnClicked","updateMemoClicked","updateMemo","onUpdateMemo","innerModalToggle","innerDeleteBtnClicked","deleteMemo","onDeleteMemo","archiveMemo","onArchiveMemo","apps","initializeApp","apiKey","authDomain","databaseURL","colorSelected","selectEmpty","aria-labelledby"],"mappings":"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","file":"static/js/main.439ef60f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://memo-a117b.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { CircularProgress,\r\n          Typography } from '@material-ui/core';\r\nimport NoteOutlinedIcon from '@material-ui/icons/NoteOutlined';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport AddMemo from '../../containers/AddMemo/AddMemo';\r\nimport SideMenu from '../../components/UI/SideMenu/SideMenu';\r\nimport Toast from '../../components/UI/Toast/Toast';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport './Memos.css';\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    marginTop: theme.spacing.unit * 20,\r\n  }\r\n});\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\nclass Memos extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onLayoutChange = this.onLayoutChange.bind(this);\r\n    this.state = {\r\n      hasTitle: false,\r\n      hasContent: false,\r\n      dropdownOpen: false,\r\n      db: null,\r\n      layouts: getFromLS('layouts'),\r\n      memoStyle: {\r\n        'YELLOW': {\r\n          border: '1px solid #feef9c',\r\n          backgroundColor: '#feef9c'\r\n        },\r\n        'PURPLE': {\r\n          border: '1px solid #dcdfff',\r\n          backgroundColor: '#dcdfff'\r\n        },\r\n        'ORANGE': {\r\n          border: '1px solid #feccaf',\r\n          backgroundColor: '#feccaf'\r\n        },\r\n        'GREEN': {\r\n          border: '1px solid #b1ffb1',\r\n          backgroundColor: '#b1ffb1'\r\n        },\r\n        'BLUE': {\r\n          border: '1px solid #d8f1ff',\r\n          backgroundColor: '#d8f1ff'\r\n        },\r\n        'PINK': {\r\n          border: '1px solid #feb0bc',\r\n          backgroundColor: '#feb0bc'\r\n        }\r\n      }\r\n    };\r\n    \r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.onFetchMemos();\r\n  }\r\n\r\n  onLayoutChange(layout, newLayout) {\r\n      saveToLS(\"layouts\", newLayout);\r\n      this.setState({ layouts: newLayout })\r\n  }\r\n\r\n  memoClicked = (memo) => {\r\n    this.toggle();\r\n    this.selectMemo(memo);\r\n    this.storeId(memo);\r\n    this.storeColor(memo);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  selectMemo = (memo) => {\r\n    this.checkInput(memo);\r\n    this.props.onSelectMemo(memo.title, memo.content)\r\n  }\r\n\r\n  checkInput = (memo) => {\r\n    if (memo.title === null || memo.title === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n\r\n    if (memo.content === null || memo.content === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n  }\r\n\r\n  storeId = (memo) => {\r\n    this.props.onStoreId(memo.id)\r\n  }\r\n\r\n  storeColor = (memo) => {\r\n    this.props.onStoreColor(memo.color)\r\n  }\r\n\r\n  generateAddedMemos = () => {\r\n    if (this.props.addedMemos.length > 0) {\r\n      // Show all memos except archived memos\r\n      let nonArchivedMemos = null;\r\n      nonArchivedMemos = this.props.addedMemos.filter(memo => memo.archived === false);\r\n      return nonArchivedMemos.map(memo => (\r\n      // return this.props.addedMemos.map(memo => (\r\n        <div\r\n          key={memo.id}\r\n          onDoubleClick={() => this.memoClicked(memo)}\r\n          style={this.state.memoStyle[memo.color]}\r\n          className='memo'\r\n          data-grid={{ x: 0, y: 0, w: 3, h: 5 }}\r\n        >\r\n\r\n          <h3>{memo.title}</h3>\r\n          <hr />\r\n          <div>{memo.content}</div>\r\n          {this.props.draggable\r\n            ? <i className=\"material-icons dragHandle\">drag_handle</i>\r\n            : null}\r\n        </div>\r\n\r\n      ));\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    // When No memos is stored\r\n    let memoEmpty = null\r\n    if ( this.props.memosFetched && this.props.addedMemos.length <= 0 ) {\r\n      memoEmpty = (\r\n        <div className=\"memo-empty\">\r\n          <NoteOutlinedIcon \r\n            fontSize=\"large\"\r\n            color=\"disabled\"\r\n            className=\"memo-empty-icon\" />\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"textSecondary\">\r\n            Saved memos appear here\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const { classes } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <SideMenu history={this.props.history} />\r\n        <AddMemo />\r\n        {memoEmpty}\r\n\r\n        {this.props.memosFetched\r\n          ? \r\n          <ResponsiveReactGridLayout\r\n            className=\"layout\"\r\n            breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\r\n            cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\r\n            rowHeight={40}\r\n            layouts={this.state.layouts}\r\n            onLayoutChange={(layout, newLayout) =>\r\n              this.onLayoutChange(layout, newLayout)\r\n            }\r\n            isDraggable={this.props.draggable}\r\n          >\r\n            {this.generateAddedMemos()}\r\n          </ResponsiveReactGridLayout>\r\n          : (<CircularProgress color=\"secondary\" className={classes.progress} />)\r\n        }\r\n\r\n        {this.props.showStoredMemo ? <Modal /> : null}\r\n        <Toast toastMsg={this.props.toastMsg} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const emptyObject = (data) => {\r\n  let isEmpty = true;\r\n\r\n  if (data && data !== 'undefined' && data !== null) {\r\n    isEmpty = Object.keys(data).length === 0 && data.constructor === Object;\r\n  }\r\n\r\n  return isEmpty;\r\n}\r\n\r\nfunction getFromLS(layoutName) {\r\n  if (global.localStorage) {\r\n    let savedLayout = global.localStorage.getItem(layoutName);\r\n    if (savedLayout && !emptyObject(savedLayout)) {\r\n      return JSON.parse(savedLayout).layouts;\r\n    } else {\r\n      return { lg: [{ x: 0, y: 0, w: 4, h: 4, minW: 4, maxW: 8 }] };\r\n    }\r\n  }\r\n}\r\n\r\nexport function saveToLS(layoutName, value) {\r\n  if (global.localStorage) {\r\n    global.localStorage.setItem(layoutName, JSON.stringify({ layouts: value }));\r\n  } else {\r\n    console.error('localStorage is not supported');\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = state => {\r\n  return {\r\n    addedMemos: state.memos,\r\n    tempMemos: state.tempMemos,\r\n    showStoredMemo: state.showStoredMemo,\r\n    memosFetched: state.memosFetched,\r\n    filterColor: state.filterColor,\r\n    draggable: state.draggable,\r\n    toastMsg: state.toastMsg\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectMemo: (title, content) => dispatch({ type: 'SELECT_MEMO', memoTitle: title, memoContent: content }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onStoreId: (id) => dispatch({ type: 'STORE_ID', memoId: id }),\r\n    onStoreColor: (color) => dispatch({ type: 'STORE_COLOR', memoColor: color }),\r\n    onFetchMemos: () => dispatch(actions.fetchMemos())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Memos));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios-orders';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button } from '@material-ui/core';\r\n\r\nimport './AddMemo.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  }\r\n});\r\n\r\nclass AddMemo extends Component {\r\n\r\n\tstate = {\r\n\t\ttitle: \"\",\r\n\t\tcontent: \"\",\r\n\t\thasTitle: false,\r\n\t\thasContent: false\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\tthis.props.onToggleModal();\r\n\t\tthis.deleteInput();\t// Clear previous input fields\r\n\t}\r\n\r\n\tsaveMemo = () => {\r\n\t\tconst memoData = {\r\n\t\t\tid: new Date().getTime(),\r\n\t\t\ttitle: this.state.title,\r\n\t\t\tcontent: this.state.content,\r\n\t\t\tcolor: 'YELLOW',\r\n\t\t\tarchived: false\r\n\t\t}\r\n\t\tthis.props.onSaveMemo(memoData);\r\n\t}\r\n\r\n\t// Clear previous input fields\r\n\tdeleteInput = () => {\r\n\t\tthis.setState({\r\n\t\t\ttitle: '',\r\n\t\t\tcontent: '',\r\n\t\t\thasTitle: false,\r\n\t\t\thasContent: false\r\n\t\t})\r\n\t}\r\n\r\n\tsaveMemoClicked = () => {\r\n\t\tthis.toggle();\r\n\t\tthis.saveMemo();\r\n\t}\r\n\r\n\ttitleChangedHandler = (event) => {\r\n\t\tif (event.target.value === null || event.target.value === '') {\r\n\t\t\tthis.setState({ hasTitle: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ hasTitle: true });\r\n\t\t}\r\n\t\tthis.setState({ title: event.target.value });\r\n\t}\r\n\r\n\tcontentChangedHandler = (event) => {\r\n\t\tif (event.target.value === null || event.target.value === '') {\r\n\t\t\tthis.setState({ hasContent: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ hasContent: true });\r\n\t\t}\r\n\t\tthis.setState({ content: event.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tlet atLeastOneInputHasValue = this.state.hasTitle || this.state.hasContent;\r\n\r\n    const { classes } = this.props;\r\n\r\n    let dialog = null;\r\n\t\tif (!this.props.showStoredMemo) {\r\n      dialog = (\r\n        <div>\r\n          <Dialog\r\n            open={this.props.showModal}\r\n            onClose={this.toggle}\r\n            fullWidth={true}\r\n            maxWidth=\"sm\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Create New Memo</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"normal\"\r\n                id=\"memoTitle\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                onChange={this.titleChangedHandler}\r\n                value={this.state.title}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"memoContent\"\r\n                label=\"Content\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                multiline\r\n                rows='10'\r\n                onChange={this.contentChangedHandler}\r\n                value={this.state.content}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions className={classes.root}>\r\n              <Button \r\n                onClick={this.saveMemoClicked} \r\n                variant=\"text\" \r\n                color=\"primary\" \r\n                className={classes.button} \r\n                disabled={!atLeastOneInputHasValue}>\r\n                SAVE\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n        {dialog}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n    showStoredMemo: state.showStoredMemo,\r\n\t\tshowModal: state.showModal\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonSaveMemo: (memoData) => dispatch(actions.saveMemo(memoData)),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' })\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddMemo, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ListItemSecondaryAction, \r\n          Typography, \r\n          Toolbar, \r\n          AppBar, \r\n          IconButton, \r\n          ListItemText, \r\n          ListItemIcon, \r\n          ListItem, \r\n          List, \r\n          SwipeableDrawer, \r\n          Switch,\r\n          Fab,\r\n          Icon,\r\n          Link,\r\n          Tooltip } from '@material-ui/core';\r\nimport {  Create, \r\n          DragHandle,\r\n          ArchiveOutlined } from '@material-ui/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport './SideMenu.css';\r\n\r\nconst styles = theme => ({\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    paddingLeft: 20\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12\r\n  },\r\n  searchIcon: {\r\n    marginRight: -12\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2,\r\n    zIndex: theme.zIndex.tooltip\r\n  },\r\n  credit: {\r\n    bottom: theme.spacing.unit * 1,\r\n    position: 'absolute'\r\n  },\r\n  link: {\r\n    margin: theme.spacing.unit * 3,\r\n    display: 'block'\r\n  }\r\n});\r\n\r\n\r\nclass SideMenu extends Component {\r\n  state = {\r\n    menu: false,\r\n    checked: false\r\n    // openNestedList: false\r\n  };\r\n\r\n  dragToggleSwitched = event => {\r\n    this.setState({ checked: !this.state.checked });\r\n\r\n    if (event.target.checked === true) {\r\n      // Drag mode ON\r\n      this.props.onToggleDraggable(true);\r\n    } else {\r\n      // Drag mode OFF\r\n      this.props.onToggleDraggable(false);\r\n    }\r\n  };\r\n\r\n  closeDrawer = () => {\r\n    this.setState({ menu: false });\r\n  };\r\n\r\n  openDrawer = () => {\r\n    this.setState({ menu: true });\r\n  };\r\n\r\n  // Create new memo\r\n  createOnClick = () => {\r\n    this.closeDrawer();\r\n    this.props.onCreateMemo();\r\n  }\r\n\r\n  // Search icon is clicked\r\n  searchClicked = () => {\r\n    this.props.onSearch();  // Show all memos and ready to filter memos by text\r\n    this.props.history.push('/memo/filter'); // Redirect to that path\r\n    this.props.onToggleDraggable(false);  // Turn drag mode OFF\r\n  }\r\n\r\n  // When web app title is clicked, scroll to top\r\n  titleClicked = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  showArchivedMemos = () => {\r\n    this.props.history.push('/memo/archive');\r\n    this.props.onToggleDraggable(false);  // Turn drag mode OFF\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const fullList = (\r\n      <div className={classes.fullList}>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <DragHandle color=\"primary\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Drag Memo\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                onChange={event => this.dragToggleSwitched(event)}\r\n                checked={this.state.checked}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n\r\n          <ListItem \r\n            button\r\n            onClick={this.createOnClick}>\r\n            <ListItemIcon>\r\n              <Create color=\"primary\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Create New Memo\" />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={this.showArchivedMemos}>\r\n            <ListItemIcon>\r\n              <ArchiveOutlined color=\"primary\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Archive\" />\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    const links = (\r\n      <Typography className={classes.credit}>\r\n        <Link \r\n          href=\"https://github.com/hkKevin/memo\" \r\n          target=\"_blank\" \r\n          rel=\"noopener\" \r\n          className={classes.link} \r\n          color=\"textSecondary\">\r\n          GitHub Repository\r\n        </Link>\r\n        <Link \r\n          href=\"https://github.com/hkKevin\" \r\n          target=\"_blank\" \r\n          rel=\"noopener\" \r\n          className={classes.link} \r\n          color=\"textSecondary\">\r\n          Developed by Pak Kiu Leung (Kevin)\r\n        </Link>\r\n      </Typography>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <AppBar color=\"inherit\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton \r\n               color=\"primary\"\r\n               onClick={this.openDrawer} \r\n               className={classes.menuButton} \r\n               aria-label=\"Menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Tooltip title=\"Scroll to top\">\r\n              <Typography\r\n                id=\"appTitle\"\r\n                className={classes.title}\r\n                onClick={this.titleClicked}\r\n                variant=\"h6\" \r\n                color=\"primary\">\r\n                MEMO\r\n              </Typography>\r\n            </Tooltip>\r\n            <Tooltip title=\"Find\">\r\n              <IconButton \r\n                color=\"primary\" \r\n                className={classes.searchIcon}\r\n                onClick={this.searchClicked}>\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Tooltip title=\"New\">\r\n          <Fab \r\n            color=\"primary\" \r\n            aria-label=\"Edit\" \r\n            className={classes.fab}\r\n            size=\"medium\"\r\n            onClick={this.createOnClick}>\r\n            <Icon>edit_icon</Icon>\r\n          </Fab>\r\n        </Tooltip>\r\n\r\n        <SwipeableDrawer \r\n          anchor=\"left\"\r\n          open={this.state.menu}  // Is the menu opened or closed\r\n          onOpen={this.openDrawer}  // Open the menu\r\n          onClose={this.closeDrawer} /* Close the menu*/ >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\">\r\n            {fullList}\r\n            {links}\r\n          </div>\r\n        </SwipeableDrawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onToggleDraggable: (draggable) => dispatch({ type: 'TOGGLE_DRAGGABLE', isDraggable: draggable }),\r\n    onCreateMemo: () => dispatch({ type: 'CREATE_MEMO' }),\r\n    onSearch: () => dispatch({ type: 'SEARCH_MEMO' })\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SideMenu));","import axios from '../../axios-orders';\r\n\r\n// Action Creators:\r\n\r\nexport const saveMemoSuccess = (memoData, firebaseItemId) => {\r\n  return {\r\n    type: 'SAVE_MEMO_SUCCESS',\r\n    memoData: memoData,\r\n    firebaseItemId: firebaseItemId,\r\n  };\r\n};\r\n\r\nexport const updateId = (memoData, firebaseItemId) => {\r\n  return {\r\n    type: 'UPDATE_ID',\r\n    memoData: memoData,\r\n    firebaseItemId: firebaseItemId,\r\n  };\r\n};\r\n\r\nexport const saveMemo = (memoData)  => {\r\n  return dispatch => {\r\n    axios.post('/memos.json', memoData)\r\n      .then(response => {\r\n        // console.log(response.data);\r\n        dispatch(saveMemoSuccess(memoData, response.data.name));\r\n        dispatch(updateId(memoData, response.data.name));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  };\r\n};\r\n\r\nexport const fetchMemosSuccess = (memos) => {\r\n  return {\r\n    type: 'FETCH_MEMOS_SUCCESS',\r\n    memos: memos\r\n  }\r\n}\r\n\r\nexport const fetchMemos = () => {\r\n  return dispatch => {\r\n    // axios.get('/memos.json')\r\n    //   .then(response => {\r\n    //     const fetchedMemos = [];\r\n    //     for (let key in response.data) {\r\n    //       fetchedMemos.push( response.data[key] );\r\n    //     }\r\n    //     dispatch(fetchMemosSuccess(fetchedMemos));\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log(error);\r\n    //   })\r\n    const fetchedMemos = []\r\n    fetch('https://memo-a117b.firebaseio.com/memos.json')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        // console.log(response);\r\n        for (let key in response) {\r\n          fetchedMemos.push( response[key] );\r\n        }\r\n        dispatch(fetchMemosSuccess(fetchedMemos));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  };\r\n};\r\n\r\nexport const updateMemoSuccess = (updatedMemos) => {\r\n  return {\r\n    type: 'UPDATE_MEMO_SUCCESS',\r\n    memos: updatedMemos\r\n  };\r\n};\r\n\r\nexport const updateMemo = () => {\r\n  return {\r\n    type: 'UPDATE_MEMO',\r\n  }\r\n};","export {\r\n  saveMemo,\r\n  fetchMemos,\r\n  updateMemo\r\n} from './memos';\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar,\r\n          Toolbar,\r\n          IconButton,\r\n          Typography,\r\n          TextField,\r\n          Tooltip,\r\n          CircularProgress } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/CancelOutlined';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './FilteredMemos.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Toast from '../../components/UI/Toast/Toast';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst styles = theme => ({\r\n  searchContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing.unit * 9,\r\n    marginBottom: -theme.spacing.unit * 9\r\n  },\r\n  colorContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing.unit * 10,\r\n    marginBottom: -theme.spacing.unit * 10,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 220,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    paddingLeft: 20\r\n  },\r\n  clearIcon: {\r\n    marginRight: -12\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing.unit * 30,\r\n  }\r\n});\r\n\r\nclass FilteredMemos extends Component {\r\n\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasTitle: false,\r\n      hasContent: false,\r\n      dropdownOpen: false,\r\n      memoStyle: {\r\n        'YELLOW': {\r\n          border: '1px solid #feef9c',\r\n          backgroundColor: '#feef9c'\r\n        },\r\n        'PURPLE': {\r\n          border: '1px solid #dcdfff',\r\n          backgroundColor: '#dcdfff'\r\n        },\r\n        'ORANGE': {\r\n          border: '1px solid #feccaf',\r\n          backgroundColor: '#feccaf'\r\n        },\r\n        'GREEN': {\r\n          border: '1px solid #b1ffb1',\r\n          backgroundColor: '#b1ffb1'\r\n        },\r\n        'BLUE': {\r\n          border: '1px solid #d8f1ff',\r\n          backgroundColor: '#d8f1ff'\r\n        },\r\n        'PINK': {\r\n          border: '1px solid #feb0bc',\r\n          backgroundColor: '#feb0bc'\r\n        }\r\n      },\r\n      searchedWord: \"\"\r\n    };\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.onFetchMemos();\r\n  }\r\n\r\n  memoClicked = (memo) => {\r\n    this.toggle();\r\n    this.selectMemo(memo);\r\n    this.storeId(memo);\r\n    this.storeColor(memo);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  selectMemo = (memo) => {\r\n    this.checkInput(memo);\r\n    this.props.onSelectMemo(memo.title, memo.content)\r\n  }\r\n\r\n  checkInput = (memo) => {\r\n    if (memo.title === null || memo.title === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n\r\n    if (memo.content === null || memo.content === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n  }\r\n\r\n  storeId = (memo) => {\r\n    this.props.onStoreId(memo.id)\r\n  }\r\n\r\n  storeColor = (memo) => {\r\n    this.props.onStoreColor(memo.color)\r\n  }\r\n\r\n  searchOnChange = (event) => {\r\n    this.setState({\r\n      searchedWord: event.target.value\r\n    });\r\n    this.props.onSearch();\r\n    this.generateAddedMemos();\r\n  }\r\n\r\n  generateAddedMemos = () => {\r\n    if (this.props.addedMemos.length > 0) {\r\n\r\n      let filteredMemos = \"\"\r\n      if ( !this.props.searchingMemo ) {\r\n        // Filtered memos by color\r\n        filteredMemos = this.props.addedMemos.filter(memo => memo.color === this.props.filterColor);\r\n      } else {\r\n        // Filtered memos by text\r\n        filteredMemos = this.props.addedMemos.filter(\r\n          memo => memo.title.toLowerCase().includes(this.state.searchedWord.toLowerCase()) || \r\n                  memo.content.toLowerCase().includes(this.state.searchedWord.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      return filteredMemos.map(memo => (\r\n        <div\r\n          key={memo.id}\r\n          onDoubleClick={() => this.memoClicked(memo)}\r\n          style={this.state.memoStyle[memo.color]}\r\n          className='filteredMemo'\r\n        >\r\n\r\n          <h3>{memo.title}</h3>\r\n          <hr />\r\n          <div>{memo.content}</div>\r\n        </div>\r\n\r\n      ));\r\n    } \r\n  }\r\n\r\n  // When web app title is clicked, scroll to top\r\n  titleClicked = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  // One of the color is clicked\r\n  colorClicked = (filterColor) => {\r\n    this.props.onFilterMemos(filterColor);  // Pass the filter color to Redux\r\n    this.setState({ searchedWord: \"\" }); // Clear the search text\r\n  }\r\n\r\n  clearFilterClicked = () => {\r\n    // Remove all filters\r\n    this.setState({ searchedWord: \"\" });\r\n    this.props.onClearFilter();\r\n  }\r\n\r\n\trender() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    let filterControl = null;\r\n    filterControl = (\r\n      <>\r\n        <div className={classes.searchContainer}>\r\n          <TextField\r\n            id=\"standard-search\"\r\n            key=\"searchField\"\r\n            name=\"searchField\"\r\n            label=\"Find...\"\r\n            type=\"search\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            autoFocus\r\n            onChange={this.searchOnChange}\r\n            value={this.state.searchedWord}\r\n          />\r\n        </div>\r\n        <div className={classes.colorContainer}>\r\n          <Tooltip title=\"Blue\">\r\n            <div \r\n              className=\"findColor colorBlue\"\r\n              onClick={() => this.colorClicked(\"BLUE\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Green\">\r\n            <div \r\n              className=\"findColor colorGreen\"\r\n              onClick={() => this.colorClicked(\"GREEN\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Orange\">\r\n            <div \r\n              className=\"findColor colorOrange\"\r\n              onClick={() => this.colorClicked(\"ORANGE\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Pink\">\r\n            <div \r\n              className=\"findColor colorPink\"\r\n              onClick={() => this.colorClicked(\"PINK\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Purple\">\r\n            <div \r\n              className=\"findColor colorPurple\"\r\n              onClick={() => this.colorClicked(\"PURPLE\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Yellow\">\r\n            <div \r\n              className=\"findColor colorYellow\"\r\n              onClick={() => this.colorClicked(\"YELLOW\")}></div>\r\n          </Tooltip>\r\n        </div>\r\n      </>\r\n      \r\n    );\r\n    \r\n\t\treturn (\r\n\t\t\t<div>\r\n        <AppBar color=\"inherit\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton \r\n              onClick={() => this.props.history.goBack()} \r\n              className={classes.menuButton} \r\n              aria-label=\"Menu\">\r\n              <ArrowBack color=\"primary\" />\r\n            </IconButton>\r\n            <Tooltip title=\"Scroll to top\">\r\n              <Typography \r\n                id=\"appTitle\"\r\n                className={classes.title}\r\n                onClick={this.titleClicked}\r\n                variant=\"h6\" \r\n                color=\"primary\">\r\n                Filter\r\n              </Typography>\r\n            </Tooltip>\r\n            <Tooltip title=\"Clear filter\">\r\n              <IconButton \r\n                color=\"primary\"\r\n                className={classes.clearIcon}\r\n                onClick={this.clearFilterClicked}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {/* {this.props.searchingMemo ? (searchField) : null} */}\r\n\r\n        {filterControl}\r\n        {this.props.memosFetched\r\n          ?\r\n          (\r\n          <div className=\"filteredLayout\">\r\n            {this.generateAddedMemos()}\r\n          </div>\r\n          )\r\n          : (<CircularProgress color=\"secondary\" className={classes.progress} />)\r\n        }\r\n\r\n        {this.props.showStoredMemo ? <Modal /> : null}\r\n        \r\n        <Toast toastMsg={this.props.toastMsg} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    addedMemos: state.memos,\r\n    tempMemos: state.tempMemos,\r\n    showStoredMemo: state.showStoredMemo,\r\n    memosFetched: state.memosFetched,\r\n    filterColor: state.filterColor,\r\n    draggable: state.draggable,\r\n    searchingMemo: state.searchingMemo,\r\n    toastMsg: state.toastMsg\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectMemo: (title, content) => dispatch({ type: 'SELECT_MEMO', memoTitle: title, memoContent: content }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onStoreId: (id) => dispatch({ type: 'STORE_ID', memoId: id }),\r\n    onStoreColor: (color) => dispatch({ type: 'STORE_COLOR', memoColor: color }),\r\n    onFetchMemos: () => dispatch(actions.fetchMemos()),\r\n    onFilterMemos: (filterColor) => dispatch({ type: 'FILTER_MEMOS', filterColor: filterColor }),\r\n    onSearch: () => dispatch({ type: 'SEARCH_MEMO' }),\r\n    onClearFilter: () => dispatch({ type: 'CLEAR_FILTER' })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FilteredMemos));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar,\r\n          Toolbar,\r\n          IconButton,\r\n          Typography,\r\n          Tooltip,\r\n          CircularProgress } from '@material-ui/core';\r\nimport { ArchiveOutlined } from '@material-ui/icons';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Toast from '../../components/UI/Toast/Toast';\r\n\r\nconst styles = theme => ({\r\n  menuButton: {\r\n    marginLeft: -12\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    paddingLeft: 20\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing.unit * 20,\r\n  }\r\n});\r\n\r\nclass ArchivedMemos extends Component {\r\n\r\n  state = {\r\n    memoStyle: {\r\n      'YELLOW': {\r\n        border: '1px solid #feef9c',\r\n        backgroundColor: '#feef9c'\r\n      },\r\n      'PURPLE': {\r\n        border: '1px solid #dcdfff',\r\n        backgroundColor: '#dcdfff'\r\n      },\r\n      'ORANGE': {\r\n        border: '1px solid #feccaf',\r\n        backgroundColor: '#feccaf'\r\n      },\r\n      'GREEN': {\r\n        border: '1px solid #b1ffb1',\r\n        backgroundColor: '#b1ffb1'\r\n      },\r\n      'BLUE': {\r\n        border: '1px solid #d8f1ff',\r\n        backgroundColor: '#d8f1ff'\r\n      },\r\n      'PINK': {\r\n        border: '1px solid #feb0bc',\r\n        backgroundColor: '#feb0bc'\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.onFetchMemos();\r\n  }\r\n  \r\n  generateAddedMemos = () => {\r\n    let archivedMemos = \"\"\r\n\r\n    if (this.props.addedMemos.length > 0) {\r\n\r\n      archivedMemos = this.props.addedMemos.filter(memo => memo.archived === true)\r\n      \r\n      return archivedMemos.map(memo => (\r\n        <div\r\n          key={memo.id}\r\n          onDoubleClick={() => this.memoClicked(memo)}\r\n          style={this.state.memoStyle[memo.color]}\r\n          className='filteredMemo'\r\n        >\r\n\r\n          <h3>{memo.title}</h3>\r\n          <hr />\r\n          <div>{memo.content}</div>\r\n        </div>\r\n\r\n      ));\r\n    } \r\n  }\r\n\r\n  memoClicked = (memo) => {\r\n    this.toggle();\r\n    this.selectMemo(memo);\r\n    this.storeId(memo);\r\n    this.storeColor(memo);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  selectMemo = (memo) => {\r\n    this.checkInput(memo);\r\n    this.props.onSelectMemo(memo.title, memo.content)\r\n  }\r\n\r\n  checkInput = (memo) => {\r\n    if (memo.title === null || memo.title === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n\r\n    if (memo.content === null || memo.content === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n  }\r\n\r\n  storeId = (memo) => {\r\n    this.props.onStoreId(memo.id)\r\n  }\r\n\r\n  storeColor = (memo) => {\r\n    this.props.onStoreColor(memo.color)\r\n  }\r\n\r\n  // When web app title is clicked, scroll to top\r\n  titleClicked = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { classes } = this.props;\r\n\r\n    // When No memos is archived\r\n    let archiveEmpty = null\r\n    if ( this.props.memosFetched && this.archivedMemos === \"\" ) {\r\n      archiveEmpty = (\r\n        <div className=\"memo-empty\">\r\n          <ArchiveOutlined \r\n            fontSize=\"large\"\r\n            color=\"disabled\"\r\n            className=\"memo-empty-icon\" />\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"textSecondary\">\r\n            Archived memos appear here\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <AppBar color=\"inherit\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton \r\n              onClick={() => this.props.history.goBack()} \r\n              className={classes.menuButton} \r\n              aria-label=\"Menu\">\r\n              <ArrowBack color=\"primary\" />\r\n            </IconButton>\r\n            <Tooltip title=\"Scroll to top\">\r\n              <Typography \r\n                id=\"appTitle\"\r\n                className={classes.title}\r\n                onClick={this.titleClicked}\r\n                variant=\"h6\" \r\n                color=\"primary\">\r\n                Archive\r\n              </Typography>\r\n            </Tooltip>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {archiveEmpty}\r\n\r\n        {this.props.memosFetched\r\n          ?\r\n          (\r\n          <div className=\"filteredLayout\">\r\n            {this.generateAddedMemos()}\r\n          </div>\r\n          )\r\n          : (<CircularProgress color=\"secondary\" className={classes.progress} />)\r\n        }\r\n\r\n        {this.props.showStoredMemo ? <Modal /> : null}\r\n\r\n        <Toast toastMsg={this.props.toastMsg} />\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nexport const mapStateToProps = state => {\r\n  return {\r\n    addedMemos: state.memos,\r\n    memosFetched: state.memosFetched,\r\n    showStoredMemo: state.showStoredMemo,\r\n    toastMsg: state.toastMsg\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectMemo: (title, content) => dispatch({ type: 'SELECT_MEMO', memoTitle: title, memoContent: content }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onStoreId: (id) => dispatch({ type: 'STORE_ID', memoId: id }),\r\n    onStoreColor: (color) => dispatch({ type: 'STORE_COLOR', memoColor: color }),\r\n    onFetchMemos: () => dispatch(actions.fetchMemos())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ArchivedMemos));","import React, { Component } from 'react';\nimport { Route, Redirect, Switch, withRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Memos from './containers/Memos/Memos';\nimport FilteredMemos from './containers/FilteredMemos/FilteredMemos';\nimport ArchivedMemos from './containers/ArchivedMemos/ArchivedMemos';\n\nclass App extends Component {\n  \n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path='/memo/archive' component={ArchivedMemos} />\n        <Route path='/memo/filter' component={FilteredMemos} />\n        <Route path='/memo' exact component={Memos} />\n        <Redirect to='/memo' />\n      </Switch>\n    );\n\n\n\n    return (\n      <div className=\"App\">\n        {routes}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase';\r\n\r\n// Action Reducer\r\n\r\nconst initialState = {\r\n  memos: [],\r\n  selectedMemoTitle: null,\r\n  selectedMemoContent: null,\r\n  selectedId: null,\r\n  selectedMemoColor: null,\r\n  showModal: false,\r\n  showNewMemoDialog: false,\r\n  showStoredMemo: false,\r\n  filterColor: \"\",\r\n  arrIndex: 0,\r\n  memosFetched: false,\r\n  draggable: false,\r\n  searchingMemo: true,\r\n  toastMsg: \"\"\r\n}\r\n\r\nconst memos = (state = initialState, action) => {\r\n\r\n  switch ( action.type ) {\r\n\r\n    // Within both AddMemo.js & Memos.js:\r\n\r\n    case 'TOGGLE_MODAL':\r\n      return { \r\n        ...state,\r\n        showModal: !state.showModal\r\n      }\r\n\r\n    // Within AddMemo.js:\r\n\r\n    case 'SAVE_MEMO_SUCCESS':\r\n      const newMemo = {\r\n        ...action.memoData,\r\n        id: action.firebaseItemId\r\n      }\r\n      return {\r\n        ...state,\r\n        memos: state.memos.concat(newMemo),\r\n        selectedId: newMemo.id,\r\n        toastMsg: \"Memo saved\" // Notify user when the new memo saved\r\n      }\r\n\r\n    case 'FETCH_MEMOS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        memos: action.memos,\r\n        memosFetched: true,\r\n        toastMsg: \"Double-click to edit memo\" // Notify user when the web app loaded/ reloaded\r\n      }\r\n\r\n\r\n    // Within Memos.js:\r\n\r\n    case 'HIDE_TOAST':\r\n      return {\r\n        ...state,\r\n        toastMsg: \"\" // Set toastMsg to empty string -> Hide the toast\r\n      }\r\n\r\n    case 'UPDATE_ID':\r\n      const editedmemos = state.memos.map( (memo, index) => {\r\n      // Only edit the newly added memo in the memos array\r\n      if (memo.id === state.selectedId) {\r\n        memo.id = state.selectedId;\r\n        state.arrIndex = index\r\n      }\r\n      return memo;\r\n      })\r\n      \r\n      const firebaseDb = firebase.database();\r\n      const updateIdUpdates = {};\r\n      // Update the selected array element to specific child node of Firebase\r\n      updateIdUpdates['/memos/' + state.selectedId] = editedmemos[state.arrIndex];\r\n      firebaseDb.ref()\r\n        .update(updateIdUpdates)\r\n        .then(() => {\r\n          // memo updated in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      return state;\r\n      \r\n\r\n    case 'STORE_COLOR':\r\n      return {\r\n        ...state,\r\n        selectedMemoColor: action.memoColor\r\n      }\r\n\r\n\r\n    case 'DELETE_MEMO':\r\n      const renewMemos = state.memos.map( (memo, index) => {\r\n        // Only delete selected memo that is in the memos array\r\n        if (memo.id === action.memoId) {\r\n          memo = null\r\n          state.arrIndex = index\r\n        }\r\n        return memo;\r\n        })\r\n\r\n      let deleteMemoUpdates = {};\r\n      deleteMemoUpdates['/memos/' + action.memoId] = renewMemos[state.arrIndex];\r\n      action.firebaseDb.ref().update(deleteMemoUpdates)\r\n        .then(() => {\r\n          // memo deleted in firebase.       \r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n      return { \r\n        ...state,\r\n        memos: state.memos.filter(memo => memo.id !== action.memoId),\r\n        toastMsg: \"Memo deleted\"\r\n      }      \r\n\r\n\r\n    case 'SELECT_MEMO':      \r\n      return { \r\n        ...state,\r\n        selectedMemoTitle: action.memoTitle,\r\n        selectedMemoContent: action.memoContent,\r\n        showStoredMemo: true\r\n      }\r\n\r\n    case 'STORE_ID':      \r\n      return { \r\n        ...state,\r\n        selectedId: action.memoId\r\n      }\r\n\r\n    case 'CHANGE_TITLE':      \r\n      return { \r\n        ...state,\r\n        selectedMemoTitle: action.memoTitle\r\n      }\r\n\r\n    case 'CHANGE_CONTENT':      \r\n      return { \r\n        ...state,\r\n        selectedMemoContent: action.memoContent\r\n      }\r\n\r\n\r\n    case 'UPDATE_MEMO':\r\n      const updatedMemos = state.memos.map( (memo, index) => {\r\n      // Only edit the selected memo in the memos array\r\n      if (memo.id === state.selectedId) {\r\n        memo.id = state.selectedId;\r\n        memo.title =  state.selectedMemoTitle;\r\n        memo.content = state.selectedMemoContent;\r\n        state.arrIndex = index\r\n      }\r\n      return memo;\r\n      })\r\n      \r\n      const updateMemoUpdates = {};\r\n      // Update the selected array element to specific child node of Firebase\r\n      updateMemoUpdates['/memos/' + state.selectedId] = updatedMemos[state.arrIndex];\r\n      action.firebaseDb.ref()\r\n        .update(updateMemoUpdates)\r\n        .then(() => {\r\n          // memo updated in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      // return state;\r\n      return {\r\n        ...state,\r\n        toastMsg: \"Memo updated\"\r\n      }\r\n\r\n    case 'ARCHIVE_MEMO':\r\n      const archivedMemos = state.memos.map( (memo, index) => {\r\n        // Only edit the selected memo in the memos array\r\n        if (memo.id === state.selectedId) {\r\n          memo.archived = true\r\n        }\r\n        return memo;\r\n        })\r\n        \r\n      const archiveMemoUpdates = {};\r\n      // Update the selected array element to specific child node of Firebase\r\n      archiveMemoUpdates['/memos/' + state.selectedId] = archivedMemos[state.arrIndex];\r\n      action.firebaseDb.ref()\r\n        .update(archiveMemoUpdates)\r\n        .then(() => {\r\n          // memo archived in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      // return state;\r\n      return {\r\n        ...state,\r\n        toastMsg: \"Memo archived\"\r\n      }\r\n\r\n\r\n    case 'CHANGE_COLOR':\r\n      const colorChangedMemos = state.memos.map( (memo, index) => {\r\n        // Only edit selected memo in the memos array\r\n        if (memo.id === state.selectedId) {\r\n          memo.color = action.memoColor\r\n          state.arrIndex = index\r\n        }\r\n        return memo;\r\n      })\r\n\r\n      const changeColorUpdates = {};\r\n      \r\n      // Update the selected array element to specific child node of Firebase\r\n      changeColorUpdates['/memos/' + state.selectedId] = colorChangedMemos[state.arrIndex];\r\n      action.firebaseDb.ref()\r\n        .update(changeColorUpdates)\r\n        .then(() => {\r\n          // memo updated in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      return {\r\n        ...state,\r\n        memos: colorChangedMemos,\r\n        selectedMemoColor: action.memoColor,\r\n        toastMsg: \"Color updated\"\r\n      }\r\n    \r\n    // Only show memos with selected color\r\n    case 'FILTER_MEMOS':      \r\n      return { \r\n        ...state,\r\n        filterColor: action.filterColor,\r\n        searchingMemo: false\r\n      }\r\n\r\n    case 'CLEAR_FILTER':\r\n      return { \r\n        ...state,\r\n        filterColor: \"\",\r\n        searchingMemo: true\r\n      }\r\n\r\n    case 'TOGGLE_DRAGGABLE':      \r\n      return { \r\n        ...state,\r\n        draggable: action.isDraggable\r\n      }\r\n\r\n    case 'CREATE_MEMO':\r\n      return { \r\n        ...state,\r\n        showModal: true,\r\n        showStoredMemo: false\r\n      }\r\n    \r\n      // Filter memos by text\r\n    case 'SEARCH_MEMO':\r\n      return { \r\n        ...state,\r\n        searchingMemo: true\r\n      }\r\n    \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default memos;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/memos';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// composeEnhancers\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n// const store = createStore(reducer, composeEnhancers(\n//   applyMiddleware(thunk)\n// ));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#880e4f',\n    },\n    secondary: {\n      main: '#1a237e',\n    }\n  },\n  \n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </BrowserRouter>\n  </Provider>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\n// Toast is same as Snackbar\r\nclass Toast extends Component {\r\n\r\n  hideToast = (event, reason) => {\r\n    // Click away from the toast will not hide the toast\r\n    if (reason === 'clickaway') { \r\n      return; \r\n    }\r\n    // trigger the change of Redux state\r\n    this.props.onHideToast();\r\n  }\r\n\r\n  render() {\r\n\r\n let showToast = false;\r\n    // Notify user when the web app completed an action\r\n    if (this.props.toastMsg) {\r\n      showToast = true;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={showToast}\r\n          autoHideDuration={3000}\r\n          onClose={this.hideToast}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{this.props.toastMsg}</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onHideToast: () => dispatch({ type: 'HIDE_TOAST' })\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Toast);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport firebase from 'firebase';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MenuItem, \r\n          Select, \r\n          InputLabel, \r\n          FormControl, \r\n          Dialog, \r\n          DialogTitle,\r\n          DialogActions, \r\n          DialogContent,\r\n          TextField, \r\n          Button } from '@material-ui/core';\r\n\r\n// Modal is same as Dialog\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  }\r\n});\r\n\r\nclass Modal extends Component {\r\n\r\n  state = {\r\n    db: null,\r\n    showInnerModal: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Set up Firebase config for connecting to the db.\r\n    var config = {\r\n      apiKey: 'AIzaSyDgZKmgW7LpUpJmHkMpF0II4AcfHyfZFuo',\r\n      authDomain: 'memo-a117b.firebaseapp.com',\r\n      databaseURL: 'https://memo-a117b.firebaseio.com/'\r\n    };\r\n    // Prevent duplicate firebase app\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(config);\r\n    }\r\n    // firebase.initializeApp(config);\r\n    this.setState({ db: firebase.database() });\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  titleChangedHandler = (event) => {\r\n    if (event.target.value === null || event.target.value === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n    this.props.onChangeTitle(event.target.value);\r\n  }\r\n\r\n  contentChangedHandler = (event) => {\r\n    if (event.target.value === null || event.target.value === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n    this.props.onChangeContent(event.target.value);\r\n  }\r\n\r\n  colorSelected(event) {\r\n    this.changeColor(event.target.value);\r\n  }\r\n\r\n  changeColor = (color) => {\r\n    this.props.onChangeColor(color, this.state.db);\r\n  }\r\n\r\n  OuterDeleteBtnClicked = () => {\r\n    this.setState({ \r\n      showInnerModal: true\r\n    });\r\n  }\r\n\r\n  updateMemoClicked = () => {\r\n    this.toggle();\r\n    this.updateMemo();\r\n  }\r\n\r\n  updateMemo = () => {\r\n    this.props.onUpdateMemo(this.state.db);\r\n  }\r\n\r\n  innerModalToggle = () => {\r\n    this.setState(state => ({ \r\n      showInnerModal: !state.showInnerModal\r\n    }));\r\n  }\r\n\r\n  // Really delete the memo\r\n  innerDeleteBtnClicked = () => {\r\n    this.innerModalToggle();  // Close inner modal\r\n    this.toggle();  // Close outer modal\r\n    this.deleteMemo();  // Delete the memo on Firebase\r\n  }\r\n\r\n  // Delete the memo on Firebase\r\n  deleteMemo = () => {\r\n    this.props.onDeleteMemo(this.props.selectedId, this.state.db)\r\n  }\r\n\r\n  archiveMemo = () => {\r\n    this.toggle();\r\n    this.props.onArchiveMemo(this.state.db);\r\n  }\r\n\r\n  render() {\r\n\r\n    let atLeastOneInputHasValue = this.state.hasTitle || this.state.hasContent;\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Dialog\r\n            open={this.props.showModal}\r\n            onClose={this.toggle}\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n          >\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"normal\"\r\n                id=\"memoTitle\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                onChange={this.titleChangedHandler}\r\n                value={this.props.selectedMemoTitle}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"memoContent\"\r\n                label=\"Content\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                multiline\r\n                rows='10'\r\n                onChange={this.contentChangedHandler}\r\n                value={this.props.selectedMemoContent}\r\n              />\r\n              <FormControl \r\n                required \r\n                className={classes.formControl}>\r\n                <InputLabel>Color</InputLabel>\r\n                  <Select\r\n                    value={this.props.selectedMemoColor}\r\n                    onChange={(event) => this.colorSelected(event)}\r\n                    name=\"color\"\r\n                    className={classes.selectEmpty}\r\n                  >\r\n                    <MenuItem value=\"BLUE\">Blue</MenuItem>\r\n                    <MenuItem value=\"GREEN\">Green</MenuItem>\r\n                    <MenuItem value=\"ORANGE\">Orange</MenuItem>\r\n                    <MenuItem value=\"PINK\">Pink</MenuItem>\r\n                    <MenuItem value=\"PURPLE\">Purple</MenuItem>\r\n                    <MenuItem value=\"YELLOW\">Yellow</MenuItem>\r\n                  </Select>\r\n              </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={this.archiveMemo}\r\n                variant=\"text\"\r\n                color=\"default\"\r\n                className={classes.button}>\r\n                ARCHIVE\r\n              </Button>\r\n              <Button \r\n                onClick={this.OuterDeleteBtnClicked} \r\n                variant=\"outlined\" \r\n                color=\"primary\" \r\n                className={classes.button}>\r\n                DELETE\r\n              </Button>\r\n              <Button \r\n                onClick={this.updateMemoClicked} \r\n                variant=\"contained\" \r\n                color=\"secondary\" \r\n                className={classes.button} \r\n                disabled={!atLeastOneInputHasValue}>\r\n                UPDATE\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={this.state.showInnerModal}\r\n            onClose={this.innerModalToggle}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Do you really want to delete this memo?\"}</DialogTitle>\r\n            <DialogActions>\r\n              <Button \r\n                onClick={this.innerModalToggle} \r\n                variant=\"text\" \r\n                color=\"primary\">\r\n                CANCEL\r\n              </Button>\r\n              <Button \r\n                onClick={this.innerDeleteBtnClicked} \r\n                variant=\"outlined\" \r\n                color=\"secondary\" \r\n                className={classes.button}>\r\n                DELETE\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = state => {\r\n  return {    \r\n    showModal: state.showModal,\r\n    selectedMemoTitle: state.selectedMemoTitle,\r\n    selectedMemoContent: state.selectedMemoContent,\r\n    selectedMemoColor: state.selectedMemoColor,\r\n    selectedId: state.selectedId,\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteMemo: (id, db) => dispatch({ type: 'DELETE_MEMO', memoId: id, firebaseDb: db }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onChangeTitle: (title) => dispatch({ type: 'CHANGE_TITLE', memoTitle: title }),\r\n    onChangeContent: (content) => dispatch({ type: 'CHANGE_CONTENT', memoContent: content }),\r\n    onUpdateMemo: (db) => dispatch({ type: 'UPDATE_MEMO', firebaseDb: db }),\r\n    onChangeColor: (color, db) => dispatch({ type: 'CHANGE_COLOR', memoColor: color, firebaseDb: db }),\r\n    onArchiveMemo: (db) => dispatch({ type:'ARCHIVE_MEMO', firebaseDb: db})\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Modal));"],"sourceRoot":""}