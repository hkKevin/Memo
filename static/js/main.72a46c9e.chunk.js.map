{"version":3,"sources":["axios-orders.js","components/UI/Toast/Toast.js","components/UI/Modal/Modal.js","containers/Memos/Memos.js","containers/AddMemo/AddMemo.js","components/UI/SideMenu/SideMenu.js","containers/FilteredMemos/FilteredMemos.js","App.js","serviceWorker.js","store/reducers/memos.js","index.js","store/actions/memos.js","store/actions/index.js"],"names":["axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","instance","n","axios","create","baseURL","Toast","hideToast","event","reason","_this","props","onHideToast","showToast","this","toastMsg","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","Component","connect","dispatch","type","Modal","state","db","showInnerModal","toggle","onToggleModal","titleChangedHandler","target","value","setState","hasTitle","onChangeTitle","contentChangedHandler","hasContent","onChangeContent","changeColor","color","onChangeColor","OuterDeleteBtnClicked","updateMemoClicked","updateMemo","onUpdateMemo","innerModalToggle","innerDeleteBtnClicked","deleteMemo","onDeleteMemo","selectedId","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","database","_this2","atLeastOneInputHasValue","classes","Fragment","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","showModal","fullWidth","maxWidth","autoFocus","margin","label","required","onChange","selectedMemoTitle","multiline","rows","selectedMemoContent","className","formControl","selectedMemoColor","colorSelected","name","selectEmpty","onClick","variant","button","disabled","aria-labelledby","memoId","firebaseDb","title","memoTitle","content","memoContent","memoColor","withStyles","theme","spacing","unit","input","display","minWidth","ResponsiveReactGridLayout","WidthProvider","Responsive","Memos","Object","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","memoClicked","memo","selectMemo","storeId","storeColor","checkInput","onSelectMemo","onStoreId","onStoreColor","generateAddedMemos","addedMemos","map","react__WEBPACK_IMPORTED_MODULE_6___default","key","onDoubleClick","style","memoStyle","data-grid","x","y","w","h","draggable","console","error","onLayoutChange","bind","C_Users_pakki_Desktop_Web_Dev_React_memo_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","dropdownOpen","layouts","getFromLS","YELLOW","border","backgroundColor","PURPLE","ORANGE","GREEN","BLUE","PINK","onFetchMemos","layout","newLayout","layoutName","global","localStorage","setItem","JSON","stringify","_components_UI_SideMenu_SideMenu__WEBPACK_IMPORTED_MODULE_13__","history","_containers_AddMemo_AddMemo__WEBPACK_IMPORTED_MODULE_12__","memosFetched","breakpoints","lg","md","sm","xs","xxs","cols","rowHeight","isDraggable","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","progress","showStoredMemo","_components_UI_Modal_Modal__WEBPACK_IMPORTED_MODULE_15__","_components_UI_Toast_Toast__WEBPACK_IMPORTED_MODULE_14__","React","PureComponent","emptyObject","data","isEmpty","keys","constructor","savedLayout","getItem","parse","minW","maxW","memos","tempMemos","filterColor","actions","marginTop","paper","close","padding","AddMemo","deleteInput","saveMemo","memoData","Date","getTime","onSaveMemo","saveMemoClicked","dialog","root","SideMenu","menu","checked","dragToggleSwitched","onToggleDraggable","closeDrawer","openDrawer","createOnClick","onCreateMemo","searchClicked","onSearch","push","titleClicked","document","body","scrollTop","documentElement","fullList","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_9__","primary","links","credit","href","rel","link","position","menuButton","aria-label","_material_ui_icons_Menu__WEBPACK_IMPORTED_MODULE_11___default","searchIcon","_material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_10___default","fab","size","anchor","onOpen","tabIndex","role","width","flexGrow","textAlign","paddingTop","paddingBottom","paddingLeft","marginLeft","marginRight","bottom","right","zIndex","tooltip","FilteredMemos","classCallCheck","possibleConstructorReturn","getPrototypeOf","searchOnChange","searchedWord","searchingMemo","filter","toLowerCase","includes","react_default","colorClicked","onFilterMemos","clearFilterClicked","onClearFilter","filterControl","searchContainer","index_es","textField","colorContainer","goBack","ArrowBack_default","clearIcon","CancelOutlined_default","justifyContent","alignItems","marginBottom","App","routes","react_router","path","component","exact","to","withRouter","Boolean","window","location","hostname","match","initialState","showNewMemoDialog","arrIndex","arguments","undefined","action","objectSpread","newMemo","firebaseItemId","concat","editedmemos","index","updateIdUpdates","ref","update","then","catch","log","renewMemos","deleteMemoUpdates","updatedmemos","updateMemoUpdates","colorChangedMemos","changeColorUpdates","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","createMuiTheme","palette","main","secondary","ReactDOM","render","es","react_router_dom","styles","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","post","response","saveMemoSuccess","updateId","fetchMemos","fetchedMemos","fetch","ok","Error","statusText","json","d","__webpack_exports__","memos_saveMemo"],"mappings":"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","file":"static/js/main.72a46c9e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://memo-a117b.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\n// Toast is same as Snackbar\r\nclass Toast extends Component {\r\n\r\n  hideToast = (event, reason) => {\r\n    // Click away from the toast will not hide the toast\r\n    if (reason === 'clickaway') { \r\n      return; \r\n    }\r\n    // trigger the change of Redux state\r\n    this.props.onHideToast();\r\n  }\r\n\r\n  render() {\r\n\r\n let showToast = false;\r\n    // Notify user when the web app completed an action\r\n    if (this.props.toastMsg) {\r\n      showToast = true;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={showToast}\r\n          autoHideDuration={3000}\r\n          onClose={this.hideToast}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{this.props.toastMsg}</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onHideToast: () => dispatch({ type: 'HIDE_TOAST' })\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Toast);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport firebase from 'firebase';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MenuItem, \r\n          Select, \r\n          InputLabel, \r\n          FormControl, \r\n          Dialog, \r\n          DialogTitle,\r\n          DialogActions, \r\n          DialogContent,\r\n          TextField, \r\n          Button } from '@material-ui/core';\r\n\r\n// Modal is same as Dialog\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  }\r\n});\r\n\r\nclass Modal extends Component {\r\n\r\n  state = {\r\n    db: null,\r\n    showInnerModal: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Set up Firebase config for connecting to the db.\r\n    var config = {\r\n      apiKey: 'AIzaSyDgZKmgW7LpUpJmHkMpF0II4AcfHyfZFuo',\r\n      authDomain: 'memo-a117b.firebaseapp.com',\r\n      databaseURL: 'https://memo-a117b.firebaseio.com/'\r\n    };\r\n    // Prevent duplicate firebase app\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(config);\r\n    }\r\n    // firebase.initializeApp(config);\r\n    this.setState({ db: firebase.database() });\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  titleChangedHandler = (event) => {\r\n    if (event.target.value === null || event.target.value === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n    this.props.onChangeTitle(event.target.value);\r\n  }\r\n\r\n  contentChangedHandler = (event) => {\r\n    if (event.target.value === null || event.target.value === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n    this.props.onChangeContent(event.target.value);\r\n  }\r\n\r\n  colorSelected(event) {\r\n    this.changeColor(event.target.value);\r\n  }\r\n\r\n  changeColor = (color) => {\r\n    this.props.onChangeColor(color, this.state.db);\r\n  }\r\n\r\n  OuterDeleteBtnClicked = () => {\r\n    this.setState({ \r\n      showInnerModal: true\r\n    });\r\n  }\r\n\r\n  updateMemoClicked = () => {\r\n    this.toggle();\r\n    this.updateMemo();\r\n  }\r\n\r\n  updateMemo = () => {\r\n    this.props.onUpdateMemo(this.state.db);\r\n  }\r\n\r\n  innerModalToggle = () => {\r\n    this.setState(state => ({ \r\n      showInnerModal: !state.showInnerModal\r\n    }));\r\n  }\r\n\r\n  // Really delete the memo\r\n  innerDeleteBtnClicked = () => {\r\n    this.innerModalToggle();  // Close inner modal\r\n    this.toggle();  // Close outer modal\r\n    this.deleteMemo();  // Delete the memo on Firebase\r\n  }\r\n\r\n  // Delete the memo on Firebase\r\n  deleteMemo = () => {\r\n    this.props.onDeleteMemo(this.props.selectedId, this.state.db)\r\n  }\r\n\r\n  render() {\r\n\r\n    let atLeastOneInputHasValue = this.state.hasTitle || this.state.hasContent;\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Dialog\r\n            open={this.props.showModal}\r\n            onClose={this.toggle}\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n          >\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"normal\"\r\n                id=\"memoTitle\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                onChange={this.titleChangedHandler}\r\n                value={this.props.selectedMemoTitle}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"memoContent\"\r\n                label=\"Content\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                multiline\r\n                rows='10'\r\n                onChange={this.contentChangedHandler}\r\n                value={this.props.selectedMemoContent}\r\n              />\r\n              <FormControl \r\n                required \r\n                className={classes.formControl}>\r\n                <InputLabel>Color</InputLabel>\r\n                  <Select\r\n                    value={this.props.selectedMemoColor}\r\n                    onChange={(event) => this.colorSelected(event)}\r\n                    name=\"color\"\r\n                    className={classes.selectEmpty}\r\n                  >\r\n                    <MenuItem value=\"BLUE\">Blue</MenuItem>\r\n                    <MenuItem value=\"GREEN\">Green</MenuItem>\r\n                    <MenuItem value=\"ORANGE\">Orange</MenuItem>\r\n                    <MenuItem value=\"PINK\">Pink</MenuItem>\r\n                    <MenuItem value=\"PURPLE\">Purple</MenuItem>\r\n                    <MenuItem value=\"YELLOW\">Yellow</MenuItem>\r\n                  </Select>\r\n              </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button \r\n                onClick={this.OuterDeleteBtnClicked} \r\n                variant=\"text\" \r\n                color=\"primary\" \r\n                className={classes.button}>\r\n                DELETE\r\n              </Button>\r\n              <Button \r\n                onClick={this.updateMemoClicked} \r\n                variant=\"text\" \r\n                color=\"secondary\" \r\n                className={classes.button} \r\n                disabled={!atLeastOneInputHasValue}>\r\n                UPDATE\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={this.state.showInnerModal}\r\n            onClose={this.innerModalToggle}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Really delete this memo?\"}</DialogTitle>\r\n            <DialogActions>\r\n              <Button \r\n                onClick={this.innerModalToggle} \r\n                color=\"primary\">\r\n                CANCEL\r\n              </Button>\r\n              <Button \r\n                onClick={this.innerDeleteBtnClicked} \r\n                variant=\"text\" \r\n                color=\"secondary\" \r\n                className={classes.button}>\r\n                DELETE\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = state => {\r\n  return {    \r\n    showModal: state.showModal,\r\n    selectedMemoTitle: state.selectedMemoTitle,\r\n    selectedMemoContent: state.selectedMemoContent,\r\n    selectedMemoColor: state.selectedMemoColor,\r\n    selectedId: state.selectedId,\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteMemo: (id, db) => dispatch({ type: 'DELETE_MEMO', memoId: id, firebaseDb: db }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onChangeTitle: (title) => dispatch({ type: 'CHANGE_TITLE', memoTitle: title }),\r\n    onChangeContent: (content) => dispatch({ type: 'CHANGE_CONTENT', memoContent: content }),\r\n    onUpdateMemo: (db) => dispatch({ type: 'UPDATE_MEMO', firebaseDb: db }),\r\n    onChangeColor: (color, db) => dispatch({ type: 'CHANGE_COLOR', memoColor: color, firebaseDb: db }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Modal));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport AddMemo from '../../containers/AddMemo/AddMemo';\r\nimport SideMenu from '../../components/UI/SideMenu/SideMenu';\r\nimport Toast from '../../components/UI/Toast/Toast';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport './Memos.css';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing.unit * 20,\r\n  },\r\n  paper: {\r\n    margin: 0\r\n  },\r\n  close: {\r\n    padding: theme.spacing.unit * 0.5\r\n  }\r\n});\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\nclass Memos extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onLayoutChange = this.onLayoutChange.bind(this);\r\n    this.state = {\r\n      hasTitle: false,\r\n      hasContent: false,\r\n      dropdownOpen: false,\r\n      db: null,\r\n      layouts: getFromLS('layouts'),\r\n      memoStyle: {\r\n        'YELLOW': {\r\n          border: '1px solid #feef9c',\r\n          backgroundColor: '#feef9c'\r\n        },\r\n        'PURPLE': {\r\n          border: '1px solid #dcdfff',\r\n          backgroundColor: '#dcdfff'\r\n        },\r\n        'ORANGE': {\r\n          border: '1px solid #feccaf',\r\n          backgroundColor: '#feccaf'\r\n        },\r\n        'GREEN': {\r\n          border: '1px solid #b1ffb1',\r\n          backgroundColor: '#b1ffb1'\r\n        },\r\n        'BLUE': {\r\n          border: '1px solid #d8f1ff',\r\n          backgroundColor: '#d8f1ff'\r\n        },\r\n        'PINK': {\r\n          border: '1px solid #feb0bc',\r\n          backgroundColor: '#feb0bc'\r\n        }\r\n      }\r\n    };\r\n    \r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.onFetchMemos();\r\n  }\r\n\r\n  onLayoutChange(layout, newLayout) {\r\n      saveToLS(\"layouts\", newLayout);\r\n      this.setState({ layouts: newLayout })\r\n  }\r\n\r\n  memoClicked = (memo) => {\r\n    this.toggle();\r\n    this.selectMemo(memo);\r\n    this.storeId(memo);\r\n    this.storeColor(memo);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  selectMemo = (memo) => {\r\n    this.checkInput(memo);\r\n    this.props.onSelectMemo(memo.title, memo.content)\r\n  }\r\n\r\n  checkInput = (memo) => {\r\n    if (memo.title === null || memo.title === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n\r\n    if (memo.content === null || memo.content === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n  }\r\n\r\n  storeId = (memo) => {\r\n    this.props.onStoreId(memo.id)\r\n  }\r\n\r\n  storeColor = (memo) => {\r\n    this.props.onStoreColor(memo.color)\r\n  }\r\n\r\n  generateAddedMemos = () => {\r\n    if (this.props.addedMemos.length > 0) {\r\n      return this.props.addedMemos.map(memo => (\r\n        <div\r\n          key={memo.id}\r\n          onDoubleClick={() => this.memoClicked(memo)}\r\n          style={this.state.memoStyle[memo.color]}\r\n          className='memo'\r\n          data-grid={{ x: 0, y: 0, w: 3, h: 5 }}\r\n        >\r\n\r\n          <h3>{memo.title}</h3>\r\n          <hr />\r\n          <div>{memo.content}</div>\r\n          {this.props.draggable\r\n            ? <i className=\"material-icons dragHandle\">drag_handle</i>\r\n            : null}\r\n        </div>\r\n\r\n      ));\r\n    } else {\r\n      console.error('no firebase widgets available yet.');\r\n      return <div>Loading...</div>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <SideMenu history={this.props.history} />\r\n        <AddMemo />\r\n\r\n        {this.props.memosFetched\r\n          ? \r\n          <ResponsiveReactGridLayout\r\n            className=\"layout\"\r\n            breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\r\n            cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\r\n            rowHeight={40}\r\n            layouts={this.state.layouts}\r\n            onLayoutChange={(layout, newLayout) =>\r\n              this.onLayoutChange(layout, newLayout)\r\n            }\r\n            isDraggable={this.props.draggable}\r\n          >\r\n            {this.generateAddedMemos()}\r\n          </ResponsiveReactGridLayout>\r\n          : (<CircularProgress color=\"secondary\" className={classes.progress} />)\r\n        }\r\n\r\n        {this.props.showStoredMemo ? <Modal /> : null}\r\n        <Toast toastMsg={this.props.toastMsg} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const emptyObject = (data) => {\r\n  let isEmpty = true;\r\n\r\n  if (data && data !== 'undefined' && data !== null) {\r\n    isEmpty = Object.keys(data).length === 0 && data.constructor === Object;\r\n  }\r\n\r\n  return isEmpty;\r\n}\r\n\r\nfunction getFromLS(layoutName) {\r\n  if (global.localStorage) {\r\n    let savedLayout = global.localStorage.getItem(layoutName);\r\n    if (savedLayout && !emptyObject(savedLayout)) {\r\n      return JSON.parse(savedLayout).layouts;\r\n    } else {\r\n      return { lg: [{ x: 0, y: 0, w: 4, h: 4, minW: 4, maxW: 8 }] };\r\n    }\r\n  }\r\n}\r\n\r\nexport function saveToLS(layoutName, value) {\r\n  if (global.localStorage) {\r\n    global.localStorage.setItem(layoutName, JSON.stringify({ layouts: value }));\r\n  } else {\r\n    console.error('localStorage is not supported');\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = state => {\r\n  return {\r\n    addedMemos: state.memos,\r\n    tempMemos: state.tempMemos,\r\n    showStoredMemo: state.showStoredMemo,\r\n    memosFetched: state.memosFetched,\r\n    filterColor: state.filterColor,\r\n    draggable: state.draggable,\r\n    toastMsg: state.toastMsg\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectMemo: (title, content) => dispatch({ type: 'SELECT_MEMO', memoTitle: title, memoContent: content }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onStoreId: (id) => dispatch({ type: 'STORE_ID', memoId: id }),\r\n    onStoreColor: (color) => dispatch({ type: 'STORE_COLOR', memoColor: color }),\r\n    onFetchMemos: () => dispatch(actions.fetchMemos())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Memos));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios-orders';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button } from '@material-ui/core';\r\n\r\nimport './AddMemo.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  }\r\n});\r\n\r\nclass AddMemo extends Component {\r\n\r\n\tstate = {\r\n\t\ttitle: \"\",\r\n\t\tcontent: \"\",\r\n\t\thasTitle: false,\r\n\t\thasContent: false\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\tthis.props.onToggleModal();\r\n\t\tthis.deleteInput();\t// Clear previous input fields\r\n\t}\r\n\r\n\tsaveMemo = () => {\r\n\t\tconst memoData = {\r\n\t\t\tid: new Date().getTime(),\r\n\t\t\ttitle: this.state.title,\r\n\t\t\tcontent: this.state.content,\r\n\t\t\tcolor: 'YELLOW'\r\n\t\t}\r\n\t\tthis.props.onSaveMemo(memoData);\r\n\t}\r\n\r\n\t// Clear previous input fields\r\n\tdeleteInput() {\r\n\t\tthis.setState({\r\n\t\t\ttitle: '',\r\n\t\t\tcontent: '',\r\n\t\t\thasTitle: false,\r\n\t\t\thasContent: false\r\n\t\t})\r\n\t}\r\n\r\n\tsaveMemoClicked = () => {\r\n\t\tthis.toggle();\r\n\t\tthis.saveMemo();\r\n\t}\r\n\r\n\ttitleChangedHandler = (event) => {\r\n\t\tif (event.target.value === null || event.target.value === '') {\r\n\t\t\tthis.setState({ hasTitle: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ hasTitle: true });\r\n\t\t}\r\n\t\tthis.setState({ title: event.target.value });\r\n\t}\r\n\r\n\tcontentChangedHandler = (event) => {\r\n\t\tif (event.target.value === null || event.target.value === '') {\r\n\t\t\tthis.setState({ hasContent: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ hasContent: true });\r\n\t\t}\r\n\t\tthis.setState({ content: event.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tlet atLeastOneInputHasValue = this.state.hasTitle || this.state.hasContent;\r\n\r\n    const { classes } = this.props;\r\n\r\n    let dialog = null;\r\n\t\tif (!this.props.showStoredMemo) {\r\n      dialog = (\r\n        <div>\r\n          <Dialog\r\n            open={this.props.showModal}\r\n            onClose={this.toggle}\r\n            fullWidth={true}\r\n            maxWidth=\"sm\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Create New Memo</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"normal\"\r\n                id=\"memoTitle\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                onChange={this.titleChangedHandler}\r\n                value={this.state.title}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"memoContent\"\r\n                label=\"Content\"\r\n                type=\"text\"\r\n                fullWidth\r\n                required\r\n                multiline\r\n                rows='10'\r\n                onChange={this.contentChangedHandler}\r\n                value={this.state.content}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions className={classes.root}>\r\n              <Button \r\n                onClick={this.saveMemoClicked} \r\n                variant=\"text\" \r\n                color=\"primary\" \r\n                className={classes.button} \r\n                disabled={!atLeastOneInputHasValue}>\r\n                SAVE\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n        {dialog}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n    showStoredMemo: state.showStoredMemo,\r\n\t\tshowModal: state.showModal\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonSaveMemo: (memoData) => dispatch(actions.saveMemo(memoData)),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' })\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddMemo, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ListItemSecondaryAction, \r\n          Typography, \r\n          Toolbar, \r\n          AppBar, \r\n          IconButton, \r\n          ListItemText, \r\n          ListItemIcon, \r\n          ListItem, \r\n          List, \r\n          SwipeableDrawer, \r\n          Switch,\r\n          Fab,\r\n          Icon,\r\n          Link,\r\n          Tooltip } from '@material-ui/core';\r\nimport {  Create, \r\n          DragHandle } from '@material-ui/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport './SideMenu.css';\r\n\r\nconst styles = theme => ({\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    paddingLeft: 20\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12\r\n  },\r\n  searchIcon: {\r\n    marginRight: -12\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2,\r\n    zIndex: theme.zIndex.tooltip\r\n  },\r\n  credit: {\r\n    bottom: theme.spacing.unit * 1,\r\n    position: 'absolute'\r\n  },\r\n  link: {\r\n    margin: theme.spacing.unit * 3,\r\n    display: 'block'\r\n  }\r\n});\r\n\r\n\r\nclass SideMenu extends Component {\r\n  state = {\r\n    menu: false,\r\n    checked: false\r\n    // openNestedList: false\r\n  };\r\n\r\n  dragToggleSwitched = event => {\r\n    this.setState({ checked: !this.state.checked });\r\n\r\n    if (event.target.checked === true) {\r\n      // Drag mode ON\r\n      this.props.onToggleDraggable(true);\r\n    } else {\r\n      // Drag mode OFF\r\n      this.props.onToggleDraggable(false);\r\n    }\r\n  };\r\n\r\n  closeDrawer = () => {\r\n    this.setState({ menu: false });\r\n  };\r\n\r\n  openDrawer = () => {\r\n    this.setState({ menu: true });\r\n  };\r\n\r\n  // Create new memo\r\n  createOnClick = () => {\r\n    this.closeDrawer();\r\n    this.props.onCreateMemo();\r\n  }\r\n\r\n  // Search icon is clicked\r\n  searchClicked = () => {\r\n    this.props.onSearch();  // Show all memos and ready to filter memos by text\r\n    this.props.history.push('/memo/filter'); // Redirect to that path\r\n    this.props.onToggleDraggable(false);  // Turn drag mode OFF\r\n  }\r\n\r\n  // When web app title is clicked, scroll to top\r\n  titleClicked = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const fullList = (\r\n      <div className={classes.fullList}>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <DragHandle color=\"primary\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Drag Memo\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                onChange={event => this.dragToggleSwitched(event)}\r\n                checked={this.state.checked}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n\r\n          <ListItem \r\n            button\r\n            onClick={this.createOnClick}>\r\n            <ListItemIcon>\r\n              <Create color=\"primary\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Create New Memo\" />\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    const links = (\r\n      <Typography className={classes.credit}>\r\n        <Link \r\n          href=\"https://github.com/hkKevin/memo\" \r\n          target=\"_blank\" \r\n          rel=\"noopener\" \r\n          className={classes.link} \r\n          color=\"textSecondary\">\r\n          GitHub Repository\r\n        </Link>\r\n        <Link \r\n          href=\"https://github.com/hkKevin\" \r\n          target=\"_blank\" \r\n          rel=\"noopener\" \r\n          className={classes.link} \r\n          color=\"textSecondary\">\r\n          Developed by Pak Kiu Leung (Kevin)\r\n        </Link>\r\n      </Typography>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <AppBar color=\"inherit\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton \r\n               color=\"primary\"\r\n               onClick={this.openDrawer} \r\n               className={classes.menuButton} \r\n               aria-label=\"Menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Tooltip title=\"Scroll to top\">\r\n              <Typography\r\n                id=\"appTitle\"\r\n                className={classes.title}\r\n                onClick={this.titleClicked}\r\n                variant=\"h6\" \r\n                color=\"primary\">\r\n                MEMO\r\n              </Typography>\r\n            </Tooltip>\r\n            <Tooltip title=\"Find\">\r\n              <IconButton \r\n                color=\"primary\" \r\n                className={classes.searchIcon}\r\n                onClick={this.searchClicked}>\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Tooltip title=\"New\">\r\n          <Fab \r\n            color=\"primary\" \r\n            aria-label=\"Edit\" \r\n            className={classes.fab}\r\n            size=\"medium\"\r\n            onClick={this.createOnClick}>\r\n            <Icon>edit_icon</Icon>\r\n          </Fab>\r\n        </Tooltip>\r\n\r\n        <SwipeableDrawer \r\n          anchor=\"left\"\r\n          open={this.state.menu}  // Is the menu opened or closed\r\n          onOpen={this.openDrawer}  // Open the menu\r\n          onClose={this.closeDrawer} /* Close the menu*/ >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\">\r\n            {fullList}\r\n            {links}\r\n          </div>\r\n        </SwipeableDrawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onToggleDraggable: (draggable) => dispatch({ type: 'TOGGLE_DRAGGABLE', isDraggable: draggable }),\r\n    onCreateMemo: () => dispatch({ type: 'CREATE_MEMO' }),\r\n    onSearch: () => dispatch({ type: 'SEARCH_MEMO' })\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(SideMenu));","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar,\r\n          Toolbar,\r\n          IconButton,\r\n          Typography,\r\n          TextField,\r\n          Tooltip } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/CancelOutlined';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './FilteredMemos.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Toast from '../../components/UI/Toast/Toast';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst styles = theme => ({\r\n  searchContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing.unit * 9,\r\n    marginBottom: -theme.spacing.unit * 9\r\n  },\r\n  colorContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing.unit * 10,\r\n    marginBottom: -theme.spacing.unit * 10,\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 220,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    paddingLeft: 20\r\n  },\r\n  clearIcon: {\r\n    marginRight: -12\r\n  }\r\n});\r\n\r\nclass FilteredMemos extends Component {\r\n\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasTitle: false,\r\n      hasContent: false,\r\n      dropdownOpen: false,\r\n      memoStyle: {\r\n        'YELLOW': {\r\n          border: '1px solid #feef9c',\r\n          backgroundColor: '#feef9c'\r\n        },\r\n        'PURPLE': {\r\n          border: '1px solid #dcdfff',\r\n          backgroundColor: '#dcdfff'\r\n        },\r\n        'ORANGE': {\r\n          border: '1px solid #feccaf',\r\n          backgroundColor: '#feccaf'\r\n        },\r\n        'GREEN': {\r\n          border: '1px solid #b1ffb1',\r\n          backgroundColor: '#b1ffb1'\r\n        },\r\n        'BLUE': {\r\n          border: '1px solid #d8f1ff',\r\n          backgroundColor: '#d8f1ff'\r\n        },\r\n        'PINK': {\r\n          border: '1px solid #feb0bc',\r\n          backgroundColor: '#feb0bc'\r\n        }\r\n      },\r\n      searchedWord: \"\"\r\n    };\r\n  }\r\n\r\n  memoClicked = (memo) => {\r\n    this.toggle();\r\n    this.selectMemo(memo);\r\n    this.storeId(memo);\r\n    this.storeColor(memo);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.onToggleModal();\r\n  }\r\n\r\n  selectMemo = (memo) => {\r\n    this.checkInput(memo);\r\n    this.props.onSelectMemo(memo.title, memo.content)\r\n  }\r\n\r\n  checkInput = (memo) => {\r\n    if (memo.title === null || memo.title === '') {\r\n      this.setState({ hasTitle: false });\r\n    } else {\r\n      this.setState({ hasTitle: true });\r\n    }\r\n\r\n    if (memo.content === null || memo.content === '') {\r\n      this.setState({ hasContent: false });\r\n    } else {\r\n      this.setState({ hasContent: true });\r\n    }\r\n  }\r\n\r\n  storeId = (memo) => {\r\n    this.props.onStoreId(memo.id)\r\n  }\r\n\r\n  storeColor = (memo) => {\r\n    this.props.onStoreColor(memo.color)\r\n  }\r\n\r\n  searchOnChange = (event) => {\r\n    this.setState({\r\n      searchedWord: event.target.value\r\n    });\r\n    this.props.onSearch();\r\n    this.generateAddedMemos();\r\n  }\r\n\r\n  generateAddedMemos = () => {\r\n    if (this.props.addedMemos.length > 0) {\r\n\r\n      let filteredMemos = \"\"\r\n      if ( !this.props.searchingMemo ) {\r\n        // Filtered memos by color\r\n        filteredMemos = this.props.addedMemos.filter(memo => memo.color === this.props.filterColor);\r\n      } else {\r\n        // Filtered memos by text\r\n        filteredMemos = this.props.addedMemos.filter(\r\n          memo => memo.title.toLowerCase().includes(this.state.searchedWord.toLowerCase()) || \r\n                  memo.content.toLowerCase().includes(this.state.searchedWord.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      return filteredMemos.map(memo => (\r\n        <div\r\n          key={memo.id}\r\n          onDoubleClick={() => this.memoClicked(memo)}\r\n          style={this.state.memoStyle[memo.color]}\r\n          className='filteredMemo'\r\n        >\r\n\r\n          <h3>{memo.title}</h3>\r\n          <hr />\r\n          <div>{memo.content}</div>\r\n        </div>\r\n\r\n      ));\r\n    } else {\r\n      console.error('no firebase widgets available yet.');\r\n      return <div>Loading...</div>;\r\n    }\r\n  }\r\n\r\n  // When web app title is clicked, scroll to top\r\n  titleClicked = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  // One of the color is clicked\r\n  colorClicked = (filterColor) => {\r\n    this.props.onFilterMemos(filterColor);  // Pass the filter color to Redux\r\n    this.setState({ searchedWord: \"\" }); // Clear the search text\r\n  }\r\n\r\n  clearFilterClicked = () => {\r\n    // Remove all filters\r\n    this.setState({ searchedWord: \"\" });\r\n    this.props.onClearFilter();\r\n  }\r\n\r\n\trender() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    let filterControl = null;\r\n    filterControl = (\r\n      <>\r\n        <div className={classes.searchContainer}>\r\n          <TextField\r\n            id=\"standard-search\"\r\n            key=\"searchField\"\r\n            name=\"searchField\"\r\n            label=\"Find...\"\r\n            type=\"search\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            autoFocus\r\n            onChange={this.searchOnChange}\r\n            value={this.state.searchedWord}\r\n          />\r\n        </div>\r\n        <div className={classes.colorContainer}>\r\n          <Tooltip title=\"Blue\">\r\n            <div \r\n              className=\"findColor colorBlue\"\r\n              onClick={() => this.colorClicked(\"BLUE\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Green\">\r\n            <div \r\n              className=\"findColor colorGreen\"\r\n              onClick={() => this.colorClicked(\"GREEN\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Orange\">\r\n            <div \r\n              className=\"findColor colorOrange\"\r\n              onClick={() => this.colorClicked(\"ORANGE\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Pink\">\r\n            <div \r\n              className=\"findColor colorPink\"\r\n              onClick={() => this.colorClicked(\"PINK\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Purple\">\r\n            <div \r\n              className=\"findColor colorPurple\"\r\n              onClick={() => this.colorClicked(\"PURPLE\")}></div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Yellow\">\r\n            <div \r\n              className=\"findColor colorYellow\"\r\n              onClick={() => this.colorClicked(\"YELLOW\")}></div>\r\n          </Tooltip>\r\n        </div>\r\n      </>\r\n      \r\n    );\r\n    \r\n\t\treturn (\r\n\t\t\t<div>\r\n        <AppBar color=\"inherit\" position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton \r\n              onClick={() => this.props.history.goBack()} \r\n              className={classes.menuButton} \r\n              aria-label=\"Menu\">\r\n              <ArrowBack color=\"primary\" />\r\n            </IconButton>\r\n            <Tooltip title=\"Scroll to top\">\r\n              <Typography \r\n                id=\"appTitle\"\r\n                className={classes.title}\r\n                onClick={this.titleClicked}\r\n                variant=\"h6\" \r\n                color=\"primary\">\r\n                Filter\r\n              </Typography>\r\n            </Tooltip>\r\n            <Tooltip title=\"Clear filter\">\r\n              <IconButton \r\n                color=\"primary\"\r\n                className={classes.clearIcon}\r\n                onClick={this.clearFilterClicked}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {/* {this.props.searchingMemo ? (searchField) : null} */}\r\n\r\n        {filterControl}\r\n        {this.props.memosFetched\r\n          ?\r\n          (\r\n          <div className=\"filteredLayout\">\r\n            {this.generateAddedMemos()}\r\n          </div>\r\n          )\r\n          : null\r\n        }\r\n\r\n        {this.props.showStoredMemo ? <Modal /> : null}\r\n        \r\n        <Toast toastMsg={this.props.toastMsg} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    addedMemos: state.memos,\r\n    tempMemos: state.tempMemos,\r\n    showStoredMemo: state.showStoredMemo,\r\n    memosFetched: state.memosFetched,\r\n    filterColor: state.filterColor,\r\n    draggable: state.draggable,\r\n    searchingMemo: state.searchingMemo,\r\n    toastMsg: state.toastMsg\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectMemo: (title, content) => dispatch({ type: 'SELECT_MEMO', memoTitle: title, memoContent: content }),\r\n    onToggleModal: () => dispatch({ type: 'TOGGLE_MODAL' }),\r\n    onStoreId: (id) => dispatch({ type: 'STORE_ID', memoId: id }),\r\n    onStoreColor: (color) => dispatch({ type: 'STORE_COLOR', memoColor: color }),\r\n    onFetchMemos: () => dispatch(actions.fetchMemos()),\r\n    onFilterMemos: (filterColor) => dispatch({ type: 'FILTER_MEMOS', filterColor: filterColor }),\r\n    onSearch: () => dispatch({ type: 'SEARCH_MEMO' }),\r\n    onClearFilter: () => dispatch({ type: 'CLEAR_FILTER' })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FilteredMemos));\r\n","import React, { Component } from 'react';\nimport { Route, Redirect, Switch, withRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Memos from './containers/Memos/Memos';\nimport FilteredMemos from './containers/FilteredMemos/FilteredMemos';\n\nclass App extends Component {\n  \n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path='/memo/filter' component={FilteredMemos} />\n        <Route path='/memo' exact component={Memos} />\n        <Redirect to='/memo' />\n      </Switch>\n    );\n\n\n\n    return (\n      <div className=\"App\">\n        {routes}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase';\r\n\r\n// Action Reducer\r\n\r\nconst initialState = {\r\n  memos: [],\r\n  selectedMemoTitle: null,\r\n  selectedMemoContent: null,\r\n  selectedId: null,\r\n  selectedMemoColor: null,\r\n  showModal: false,\r\n  showNewMemoDialog: false,\r\n  showStoredMemo: false,\r\n  filterColor: \"\",\r\n  arrIndex: 0,\r\n  memosFetched: false,\r\n  draggable: false,\r\n  searchingMemo: false,\r\n  toastMsg: \"\"\r\n}\r\n\r\nconst memos = (state = initialState, action) => {\r\n\r\n  switch ( action.type ) {\r\n\r\n    // Within both AddMemo.js & Memos.js:\r\n\r\n    case 'TOGGLE_MODAL':\r\n      return { \r\n        ...state,\r\n        showModal: !state.showModal\r\n      }\r\n\r\n    // Within AddMemo.js:\r\n\r\n    case 'SAVE_MEMO_SUCCESS':\r\n      const newMemo = {\r\n        ...action.memoData,\r\n        id: action.firebaseItemId\r\n      }\r\n      return {\r\n        ...state,\r\n        memos: state.memos.concat(newMemo),\r\n        selectedId: newMemo.id,\r\n        toastMsg: \"Memo saved\" // Notify user when the new memo saved\r\n      }\r\n\r\n    case 'FETCH_MEMOS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        memos: action.memos,\r\n        memosFetched: true,\r\n        toastMsg: \"Double-click to edit memo\" // Notify user when the web app loaded/ reloaded\r\n      }\r\n\r\n\r\n    // Within Memos.js:\r\n\r\n    case 'HIDE_TOAST':\r\n      return {\r\n        ...state,\r\n        toastMsg: \"\" // Set toastMsg to empty string -> Hide the toast\r\n      }\r\n\r\n    case 'UPDATE_ID':\r\n      const editedmemos = state.memos.map( (memo, index) => {\r\n      // Only edit the newly added memo in the memos array\r\n      if (memo.id === state.selectedId) {\r\n        memo.id = state.selectedId;\r\n        state.arrIndex = index\r\n      }\r\n      return memo;\r\n      })\r\n      \r\n      const firebaseDb = firebase.database();\r\n      const updateIdUpdates = {};\r\n      // Update the selected array element to specific child node of Firebase\r\n      updateIdUpdates['/memos/' + state.selectedId] = editedmemos[state.arrIndex];\r\n      firebaseDb.ref()\r\n        .update(updateIdUpdates)\r\n        .then(() => {\r\n          // memo updated in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      return state;\r\n      \r\n\r\n    case 'STORE_COLOR':\r\n      return {\r\n        ...state,\r\n        selectedMemoColor: action.memoColor\r\n      }\r\n\r\n\r\n    case 'DELETE_MEMO':\r\n      const renewMemos = state.memos.map( (memo, index) => {\r\n        // Only delete selected memo that is in the memos array\r\n        if (memo.id === action.memoId) {\r\n          memo = null\r\n          state.arrIndex = index\r\n        }\r\n        return memo;\r\n        })\r\n\r\n      let deleteMemoUpdates = {};\r\n      deleteMemoUpdates['/memos/' + action.memoId] = renewMemos[state.arrIndex];\r\n      action.firebaseDb.ref().update(deleteMemoUpdates)\r\n        .then(() => {\r\n          // memo deleted in firebase.       \r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n      return { \r\n        ...state,\r\n        memos: state.memos.filter(memo => memo.id !== action.memoId),\r\n        toastMsg: \"Memo deleted\"\r\n      }      \r\n\r\n\r\n    case 'SELECT_MEMO':      \r\n      return { \r\n        ...state,\r\n        selectedMemoTitle: action.memoTitle,\r\n        selectedMemoContent: action.memoContent,\r\n        showStoredMemo: true\r\n      }\r\n\r\n    case 'STORE_ID':      \r\n      return { \r\n        ...state,\r\n        selectedId: action.memoId\r\n      }\r\n\r\n    case 'CHANGE_TITLE':      \r\n      return { \r\n        ...state,\r\n        selectedMemoTitle: action.memoTitle\r\n      }\r\n\r\n    case 'CHANGE_CONTENT':      \r\n      return { \r\n        ...state,\r\n        selectedMemoContent: action.memoContent\r\n      }\r\n\r\n\r\n    case 'UPDATE_MEMO':\r\n      const updatedmemos = state.memos.map( (memo, index) => {\r\n      // Only edit the selected memo in the memos array\r\n      if (memo.id === state.selectedId) {\r\n        memo.id = state.selectedId;\r\n        memo.title =  state.selectedMemoTitle;\r\n        memo.content = state.selectedMemoContent;\r\n        state.arrIndex = index\r\n      }\r\n      return memo;\r\n      })\r\n      \r\n      const updateMemoUpdates = {};\r\n      // Update the selected array element to specific child node of Firebase\r\n      updateMemoUpdates['/memos/' + state.selectedId] = updatedmemos[state.arrIndex];\r\n      action.firebaseDb.ref()\r\n        .update(updateMemoUpdates)\r\n        .then(() => {\r\n          // memo updated in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      // return state;\r\n      return {\r\n        ...state,\r\n        toastMsg: \"Memo updated\"\r\n      }\r\n\r\n\r\n    case 'CHANGE_COLOR':\r\n      const colorChangedMemos = state.memos.map( (memo, index) => {\r\n        // Only edit selected memo in the memos array\r\n        if (memo.id === state.selectedId) {\r\n          memo.color = action.memoColor\r\n          state.arrIndex = index\r\n        }\r\n        return memo;\r\n      })\r\n\r\n      const changeColorUpdates = {};\r\n      \r\n      // Update the selected array element to specific child node of Firebase\r\n      changeColorUpdates['/memos/' + state.selectedId] = colorChangedMemos[state.arrIndex];\r\n      action.firebaseDb.ref()\r\n        .update(changeColorUpdates)\r\n        .then(() => {\r\n          // memo updated in firebase.\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      return {\r\n        ...state,\r\n        memos: colorChangedMemos,\r\n        selectedMemoColor: action.memoColor,\r\n        toastMsg: \"Color updated\"\r\n      }\r\n    \r\n    // Only show memos with selected color\r\n    case 'FILTER_MEMOS':      \r\n      return { \r\n        ...state,\r\n        filterColor: action.filterColor,\r\n        searchingMemo: false\r\n      }\r\n\r\n    case 'CLEAR_FILTER':\r\n      return { \r\n        ...state,\r\n        filterColor: \"\",\r\n        searchingMemo: true\r\n      }\r\n\r\n    case 'TOGGLE_DRAGGABLE':      \r\n      return { \r\n        ...state,\r\n        draggable: action.isDraggable\r\n      }\r\n\r\n    case 'CREATE_MEMO':\r\n      return { \r\n        ...state,\r\n        showModal: true,\r\n        showStoredMemo: false\r\n      }\r\n    \r\n      // Filter memos by text\r\n    case 'SEARCH_MEMO':\r\n      return { \r\n        ...state,\r\n        searchingMemo: true\r\n      }\r\n    \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default memos;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/memos';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// composeEnhancers\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n// const store = createStore(reducer, composeEnhancers(\n//   applyMiddleware(thunk)\n// ));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#880e4f',\n    },\n    secondary: {\n      main: '#1a237e',\n    }\n  },\n  \n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </BrowserRouter>\n  </Provider>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from '../../axios-orders';\r\n\r\n// Action Creators:\r\n\r\nexport const saveMemoSuccess = (memoData, firebaseItemId) => {\r\n  return {\r\n    type: 'SAVE_MEMO_SUCCESS',\r\n    memoData: memoData,\r\n    firebaseItemId: firebaseItemId,\r\n  };\r\n};\r\n\r\nexport const updateId = (memoData, firebaseItemId) => {\r\n  return {\r\n    type: 'UPDATE_ID',\r\n    memoData: memoData,\r\n    firebaseItemId: firebaseItemId,\r\n  };\r\n};\r\n\r\nexport const saveMemo = (memoData)  => {\r\n  return dispatch => {\r\n    axios.post('/memos.json', memoData)\r\n      .then(response => {\r\n        // console.log(response.data);\r\n        dispatch(saveMemoSuccess(memoData, response.data.name));\r\n        dispatch(updateId(memoData, response.data.name));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  };\r\n};\r\n\r\nexport const fetchMemosSuccess = (memos) => {\r\n  return {\r\n    type: 'FETCH_MEMOS_SUCCESS',\r\n    memos: memos\r\n  }\r\n}\r\n\r\nexport const fetchMemos = () => {\r\n  return dispatch => {\r\n    // axios.get('/memos.json')\r\n    //   .then(response => {\r\n    //     const fetchedMemos = [];\r\n    //     for (let key in response.data) {\r\n    //       fetchedMemos.push( response.data[key] );\r\n    //     }\r\n    //     dispatch(fetchMemosSuccess(fetchedMemos));\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log(error);\r\n    //   })\r\n    const fetchedMemos = []\r\n    fetch('https://memo-a117b.firebaseio.com/memos.json')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        // console.log(response);\r\n        for (let key in response) {\r\n          fetchedMemos.push( response[key] );\r\n        }\r\n        dispatch(fetchMemosSuccess(fetchedMemos));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  };\r\n};\r\n\r\nexport const updateMemoSuccess = (updatedMemos) => {\r\n  return {\r\n    type: 'UPDATE_MEMO_SUCCESS',\r\n    memos: updatedMemos\r\n  };\r\n};\r\n\r\nexport const updateMemo = () => {\r\n  return {\r\n    type: 'UPDATE_MEMO',\r\n  }\r\n};","export {\r\n  saveMemo,\r\n  fetchMemos,\r\n  updateMemo\r\n  // hideToast\r\n} from './memos';"],"sourceRoot":""}